!SESSION 2022-12-03 15:50:13.751 -----------------------------------------------
eclipse.buildId=4.3.2.M20140221-1700
java.version=1.8.0_231
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.dsl.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.dsl.product

This is a continuation of log file C:\Users\feder\OneDrive\Escritorio\Uniandes\LyM\LyM\New folder\.metadata\.bak_0.log
Created Time: 2022-12-03 15:50:46.206

!ENTRY org.eclipse.jdt.core 4 2 2022-12-03 15:50:46.206
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core".
!STACK 0
java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.eclipse.osgi.storagemanager.StorageManager.updateTable(StorageManager.java:512)
	at org.eclipse.osgi.storagemanager.StorageManager.open(StorageManager.java:709)
	at org.eclipse.core.internal.registry.ExtensionRegistry.setFileManager(ExtensionRegistry.java:109)
	at org.eclipse.core.internal.registry.ExtensionRegistry.checkCache(ExtensionRegistry.java:888)
	at org.eclipse.core.internal.registry.ExtensionRegistry.<init>(ExtensionRegistry.java:673)
	at org.eclipse.core.runtime.RegistryFactory.createRegistry(RegistryFactory.java:58)
	at org.eclipse.pde.internal.core.PDEExtensionRegistry.createRegistry(PDEExtensionRegistry.java:89)
	at org.eclipse.pde.internal.core.PDEExtensionRegistry.getRegistry(PDEExtensionRegistry.java:81)
	at org.eclipse.pde.internal.core.PDERegistryStrategy.createRegistry(PDERegistryStrategy.java:296)
	at org.eclipse.pde.internal.core.PDERegistryStrategy.access$1(PDERegistryStrategy.java:295)
	at org.eclipse.pde.internal.core.PDERegistryStrategy$ModelListener.modelsChanged(PDERegistryStrategy.java:58)
	at org.eclipse.pde.internal.core.PluginModelManager.fireDelta(PluginModelManager.java:388)
	at org.eclipse.pde.internal.core.PluginModelManager.modelsChanged(PluginModelManager.java:288)
	at org.eclipse.pde.internal.core.AbstractModelManager.fireModelProviderEvent(AbstractModelManager.java:35)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.createAndFireEvent(WorkspaceModelManager.java:263)
	at org.eclipse.pde.internal.core.WorkspacePluginModelManager.createAndFireEvent(WorkspacePluginModelManager.java:472)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.processModelChanges(WorkspaceModelManager.java:235)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.processModelChanges(WorkspaceModelManager.java:197)
	at org.eclipse.pde.internal.core.WorkspacePluginModelManager.processModelChanges(WorkspacePluginModelManager.java:462)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.resourceChanged(WorkspaceModelManager.java:114)
	at org.eclipse.jdt.internal.core.DeltaProcessingState$1.run(DeltaProcessingState.java:465)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(DeltaProcessingState.java:460)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:291)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:285)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:149)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:396)
	at org.eclipse.core.internal.resources.Workspace.checkpoint(Workspace.java:558)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:263)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2345)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:306)
	at org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:92)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:218)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2345)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121)

!ENTRY org.eclipse.jdt.core 4 4 2022-12-03 15:50:46.223
!MESSAGE Exception occurred in listener of pre Java resource change notification
!STACK 0
java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.eclipse.osgi.storagemanager.StorageManager.updateTable(StorageManager.java:512)
	at org.eclipse.osgi.storagemanager.StorageManager.open(StorageManager.java:709)
	at org.eclipse.core.internal.registry.ExtensionRegistry.setFileManager(ExtensionRegistry.java:109)
	at org.eclipse.core.internal.registry.ExtensionRegistry.checkCache(ExtensionRegistry.java:888)
	at org.eclipse.core.internal.registry.ExtensionRegistry.<init>(ExtensionRegistry.java:673)
	at org.eclipse.core.runtime.RegistryFactory.createRegistry(RegistryFactory.java:58)
	at org.eclipse.pde.internal.core.PDEExtensionRegistry.createRegistry(PDEExtensionRegistry.java:89)
	at org.eclipse.pde.internal.core.PDEExtensionRegistry.getRegistry(PDEExtensionRegistry.java:81)
	at org.eclipse.pde.internal.core.PDERegistryStrategy.createRegistry(PDERegistryStrategy.java:296)
	at org.eclipse.pde.internal.core.PDERegistryStrategy.access$1(PDERegistryStrategy.java:295)
	at org.eclipse.pde.internal.core.PDERegistryStrategy$ModelListener.modelsChanged(PDERegistryStrategy.java:58)
	at org.eclipse.pde.internal.core.PluginModelManager.fireDelta(PluginModelManager.java:388)
	at org.eclipse.pde.internal.core.PluginModelManager.modelsChanged(PluginModelManager.java:288)
	at org.eclipse.pde.internal.core.AbstractModelManager.fireModelProviderEvent(AbstractModelManager.java:35)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.createAndFireEvent(WorkspaceModelManager.java:263)
	at org.eclipse.pde.internal.core.WorkspacePluginModelManager.createAndFireEvent(WorkspacePluginModelManager.java:472)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.processModelChanges(WorkspaceModelManager.java:235)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.processModelChanges(WorkspaceModelManager.java:197)
	at org.eclipse.pde.internal.core.WorkspacePluginModelManager.processModelChanges(WorkspacePluginModelManager.java:462)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.resourceChanged(WorkspaceModelManager.java:114)
	at org.eclipse.jdt.internal.core.DeltaProcessingState$1.run(DeltaProcessingState.java:465)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(DeltaProcessingState.java:460)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:291)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:285)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:149)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:396)
	at org.eclipse.core.internal.resources.Workspace.checkpoint(Workspace.java:558)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:263)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2345)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:306)
	at org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:92)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:218)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2345)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121)

!ENTRY org.eclipse.core.resources 4 2 2022-12-03 15:50:55.176
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.core.resources".
!STACK 1
Java Model Exception: Java Model Status [LexerParserExampleMiniLisp does not exist]
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:498)
	at org.eclipse.jdt.internal.core.JavaModelManager.getPerProjectInfoCheckExistence(JavaModelManager.java:2309)
	at org.eclipse.jdt.internal.core.JavaProject.getPerProjectInfo(JavaProject.java:1908)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1958)
	at org.eclipse.jdt.internal.core.JavaModelManager.getNonChainingJarsCache(JavaModelManager.java:3146)
	at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathListCache(JavaModelManager.java:3163)
	at org.eclipse.jdt.internal.core.JavaModelManager.saveClasspathListCache(JavaModelManager.java:3986)
	at org.eclipse.jdt.internal.core.JavaModelManager.saving(JavaModelManager.java:4254)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle(SaveManager.java:383)
	at org.eclipse.core.internal.resources.SaveManager$1.run(SaveManager.java:192)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle(SaveManager.java:195)
	at org.eclipse.core.internal.resources.SaveManager.save(SaveManager.java:1130)
	at org.eclipse.core.internal.resources.Workspace.save(Workspace.java:2376)
	at org.eclipse.ui.internal.ide.application.IDEWorkbenchAdvisor$5.run(IDEWorkbenchAdvisor.java:508)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2022-12-03 15:50:55.176
!MESSAGE LexerParserExampleMiniLisp does not exist
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2022-12-03 15:50:55.176
!MESSAGE LexerParserExampleMiniLisp does not exist

!ENTRY org.eclipse.ui.ide 4 4 2022-12-03 15:50:57.156
!MESSAGE Problems saving workspace

!ENTRY org.eclipse.ui.ide 2 1 2022-12-03 15:50:57.156
!MESSAGE Problems occurred while trying to save the state of the workbench.
!SUBENTRY 1 org.eclipse.core.resources 2 566 2022-12-03 15:50:57.156
!MESSAGE Problems occurred during save.
!STACK 1
Java Model Exception: Java Model Status [LexerParserExampleMiniLisp does not exist]
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:498)
	at org.eclipse.jdt.internal.core.JavaModelManager.getPerProjectInfoCheckExistence(JavaModelManager.java:2309)
	at org.eclipse.jdt.internal.core.JavaProject.getPerProjectInfo(JavaProject.java:1908)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1958)
	at org.eclipse.jdt.internal.core.JavaModelManager.getNonChainingJarsCache(JavaModelManager.java:3146)
	at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathListCache(JavaModelManager.java:3163)
	at org.eclipse.jdt.internal.core.JavaModelManager.saveClasspathListCache(JavaModelManager.java:3986)
	at org.eclipse.jdt.internal.core.JavaModelManager.saving(JavaModelManager.java:4254)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle(SaveManager.java:383)
	at org.eclipse.core.internal.resources.SaveManager$1.run(SaveManager.java:192)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle(SaveManager.java:195)
	at org.eclipse.core.internal.resources.SaveManager.save(SaveManager.java:1130)
	at org.eclipse.core.internal.resources.Workspace.save(Workspace.java:2376)
	at org.eclipse.ui.internal.ide.application.IDEWorkbenchAdvisor$5.run(IDEWorkbenchAdvisor.java:508)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121)
!SUBENTRY 2 org.eclipse.jdt.core 4 969 2022-12-03 15:50:57.156
!MESSAGE LexerParserExampleMiniLisp does not exist
!SESSION 2022-12-03 15:50:58.866 -----------------------------------------------
eclipse.buildId=4.3.2.M20140221-1700
java.version=1.8.0_231
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.dsl.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.dsl.product

!ENTRY org.eclipse.jdt.core 4 4 2022-12-03 15:51:02.296
!MESSAGE Unable to read non-chaining jar cache file
!STACK 0
java.io.EOFException
	at java.io.DataInputStream.readInt(Unknown Source)
	at org.eclipse.jdt.internal.core.JavaModelManager.loadClasspathListCache(JavaModelManager.java:3112)
	at org.eclipse.jdt.internal.core.JavaModelManager.<init>(JavaModelManager.java:1578)
	at org.eclipse.jdt.internal.core.JavaModelManager.<clinit>(JavaModelManager.java:1077)
	at org.eclipse.jdt.core.JavaCore.start(JavaCore.java:5616)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.run(BundleContextImpl.java:711)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:702)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:683)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:381)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:300)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:478)
	at org.eclipse.osgi.internal.loader.BundleLoader.setLazyTrigger(BundleLoader.java:263)
	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:109)
	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:469)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:216)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:395)
	at org.eclipse.osgi.internal.loader.SingleSourcePackage.loadClass(SingleSourcePackage.java:35)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:461)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:421)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:412)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Unknown Source)
	at java.lang.Class.getConstructor0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadBundleActivator(AbstractBundle.java:167)
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:679)
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:381)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:300)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:478)
	at org.eclipse.osgi.internal.loader.BundleLoader.setLazyTrigger(BundleLoader.java:263)
	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:109)
	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:469)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:216)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:395)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:464)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:421)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:412)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.eclipse.osgi.internal.loader.BundleLoader.loadClass(BundleLoader.java:340)
	at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:229)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(AbstractBundle.java:1212)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:174)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:905)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55)
	at org.eclipse.ui.internal.registry.ViewDescriptor.createView(ViewDescriptor.java:62)
	at org.eclipse.ui.internal.ViewReference.createPart(ViewReference.java:111)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPart(CompatibilityPart.java:266)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:877)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:857)
	at org.eclipse.e4.core.internal.di.InjectorImpl.inject(InjectorImpl.java:119)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:333)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:254)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:162)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:102)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:71)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:53)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:949)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$6.run(PartRenderingEngine.java:526)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:511)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:61)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:949)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1147)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:96)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:649)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:62)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:62)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:62)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:59)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:103)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:96)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:77)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:649)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:62)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:62)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:581)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1042)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:140)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:611)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.ui 4 0 2022-12-03 15:51:04.431
!MESSAGE FileDocumentProvider.createElementInfo
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource '/qp3/src/qp4.gold' does not exist.
	at org.eclipse.core.internal.resources.Resource.checkExists(Resource.java:341)
	at org.eclipse.core.internal.resources.Resource.checkAccessible(Resource.java:215)
	at org.eclipse.core.internal.resources.File.getContents(File.java:287)
	at org.eclipse.ui.editors.text.FileDocumentProvider.setDocumentContent(FileDocumentProvider.java:399)
	at org.eclipse.xtext.ui.editor.model.XtextDocumentProvider.setDocumentContent(XtextDocumentProvider.java:194)
	at org.eclipse.ui.editors.text.StorageDocumentProvider.createDocument(StorageDocumentProvider.java:229)
	at org.eclipse.xtext.ui.editor.model.XtextDocumentProvider.createDocument(XtextDocumentProvider.java:139)
	at org.eclipse.ui.editors.text.FileDocumentProvider.createElementInfo(FileDocumentProvider.java:737)
	at org.eclipse.xtext.ui.editor.model.XtextDocumentProvider.createElementInfo(XtextDocumentProvider.java:252)
	at org.eclipse.ui.texteditor.AbstractDocumentProvider.connect(AbstractDocumentProvider.java:400)
	at org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput(AbstractTextEditor.java:4230)
	at org.eclipse.ui.texteditor.StatusTextEditor.doSetInput(StatusTextEditor.java:237)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.doSetInput(AbstractDecoratedTextEditor.java:1480)
	at org.eclipse.ui.editors.text.TextEditor.doSetInput(TextEditor.java:169)
	at org.eclipse.xtext.ui.editor.XtextEditor.doSetInput(XtextEditor.java:232)
	at org.eclipse.ui.texteditor.AbstractTextEditor$19.run(AbstractTextEditor.java:3217)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1772)
	at org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:3235)
	at org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:3262)
	at org.eclipse.xtext.ui.editor.XtextEditor.init(XtextEditor.java:255)
	at org.eclipse.ui.internal.EditorReference.initialize(EditorReference.java:359)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:306)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:877)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:857)
	at org.eclipse.e4.core.internal.di.InjectorImpl.inject(InjectorImpl.java:119)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:333)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:254)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:162)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:102)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:71)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:53)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:949)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1147)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:96)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:649)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:62)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$6.run(PartRenderingEngine.java:526)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:511)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:61)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:949)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:62)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:62)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:62)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:62)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:59)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:103)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:96)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:77)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:649)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:62)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:62)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:581)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:645)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:735)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:706)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:700)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:685)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1042)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:140)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:611)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
!SUBENTRY 1 org.eclipse.core.resources 4 368 2022-12-03 15:51:04.431
!MESSAGE Resource '/qp3/src/qp4.gold' does not exist.

!ENTRY org.eclipse.egit.ui 2 0 2022-12-03 15:51:19.906
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\feder'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.apache.log4j 4 0 2022-12-03 16:05:40.625
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>/* Project 3
 * 
 * Parser
 * 
 * Federico Melo Barrero
 * 
 */

using gold.**

toSet(C) :=  {x|  x in C}

function createParser(A):IPushdownAutomaton begin
	
	// Declare each token as a variable (I'm not memorizing 40 tokens‥.)
	var PROG: String
	var GORP: String
	var VAR: String
	var PROC: String
	var CORP: String
	var if_: String
	var else_: String
	var fi: String
	var while_: String
	var do_: String
	var od: String
	var repeatTimes: String
	var per: String
	var isfacing: String
	var isValid: String
	var canWalk: String
	var not_: String
	var walk: String
	var jump: String
	var jumpTo: String
	var veer: String
	var look: String
	var drop: String
	var grab: String
	var get: String
	var free: String
	var pop: String
	var pick: String
	var left: String
	var right: String
	var around: String
	var north: String
	var south: String
	var east: String
	var west: String
	var front: String
	var back: String
	
	PROG := "D"
	GORP := "G"
	VAR := "A"
	PROC := "P"
	CORP := "C"
	if_ := "i"
	else_ := "s"
	fi := "f"
	while_ := "w"
	do_ := "x"
	od := "y"
	repeatTimes := "r"
	per := "p"
	isfacing := "b"
	isValid := "h"
	canWalk := "c"
	not_ := "n"
	walk := "k"
	jump := "j"
	jumpTo := "t"
	veer := "q"
	look := "l"
	drop := "d"
	grab := "a"
	get := "g"
	free := "e"
	pop := "o"
	pick := "m"
	left := "L"
	right := "R"
	around := "O"
	north := "N"
	south := "S"
	east := "E"
	west := "W"
	front := "F"
	back := "B"
	
	
	// Extra variables
	var par: String
	par = "("
	var key: String
	key = "{"
	var num: String
	num := "#"
	var v: String
	v := "v"
	var V: String
	V := "V"
	
	// States
	Q := {"qPROG","q,", "qCORP", "q2",
		 "q1",
		 "q;",
		 "qPROC",
		 "qPROC(",
		 "qPROC)",
		 "qPROC,",
		 "qPROCinstrs",
		 "qPROCp",
		 "qPROCv",
		 "qVAR",
		 "qv",
		 "qCORP",
		 "qBlock",
		 "qBlockEnd"}
	
	// Tokens (Automaton's alphabet)
	Σ := toSet(A) ∪ {' ', '\n', '\t'}
	// Stack's alphabet
	Γ := {'D', 'P', 'C', 'A', '(', 'v', '{'}
	// Initial state
	q₀ := "qPROG"
	// Final state
	F := {"qPROG"}
	
	M := GPushdownAutomaton(Q, Σ, Γ, q₀, F)

	SkipChars := {' ', '\n', '\t'}   // this will only  be used when testing only the parser, as the lexer removes SkipChars

	
	// AUTOMATON

	// A program defintion begins with the keyword PROG 
	M.delta("qPROG", "q1", PROG).push(PROG)
	// It ends the keyword GORP
	M.delta("qBlockEnd", "qPROG", GORP).pop(PROG)
	
	// A declaration of variables is the keyword VAR . 
	M.delta("q1", "qVAR", VAR).push(VAR)
	// followed by a list of names separated  by commas
	M.delta("qVAR", "qv", v).ignore()
	M.delta("qv", "q,", ',').push(v)
	M.delta("q,", "qv", v).pop(v)
	// The list is followed by ;
	M.delta("qVAR", "q2", ';').pop(VAR)  // Valid empty variable declaration: VAR ;
	M.delta("qv", "q2", ';').pop(VAR)
	
	// A procedure defintion is a the word PROC
	M.delta("q1", "qPROC", PROC).push(PROC)
	M.delta("q2", "qPROC", PROC).push(PROC)
	// followed by a name
	M.delta("qPROC", "qPROCv", v).changeTop(PROC, CORP)
	// followed by a list of parameters within parenthesis separated by commas
	M.delta("qPROCv", "qPROC(", '(').push(par)
	M.delta("qPROC(", "qPROCp", v).ignore()
	M.delta("qPROC(", "qPROC)", ')').pop(par)  // Procedure with no parameters: PROC hello( ) {‥.} CORP
	M.delta("qPROCp", "qPROC)", ')').pop(par)
	M.delta("qPROCp", "qPROC,", ',').push(v)
	M.delta("qPROC,", "qPROCp", v).pop(v)
	// followed by a block of instructions
	M.delta("qPROC)", "qPROCinstrs", '{').push(key)
	// and ending with the word CORP
	M.delta("qCORP", "q2", CORP).pop(CORP)
	
	
	// Block of instructions inside procedure
	// A block of instructions is a sequence of instructions separated by semicolons within curly brackets
	// TODO
	M.delta("qPROCinstrs", "qCORP", '}').pop(key)  // Empty block of instructions in procedure: PROC hi(‥.) { } CORP

	// name := n
	M.delta("qPROCinstrs", "qASSIGN", v).push(v)
	M.delta("qASSIGN", "q:=", ''''=).push(v)


	// Single block of instructions in program, outside procedures
	// A block of instructions is a sequence of instructions separated by semicolons within curly brackets
	M.delta("q1", "qBlock", '{').push(key)
	M.delta("q2", "qBlock", '{').push(key)
	// TODO
	M.delta("qBlock", "qBlockEnd", '}').pop(key) // Empty instruction block : PROG ‥. { } GORP
	
	
	
	 // this will only  be used when testing only the parser as the lexer removes  SkipChars
	 
	 for each q in Q do
	 	for each s in SkipChars do
	 	   M.delta(q,q,λ+s).ignore()
	 	end
	 end
	
	
	return M

end

<<<
Document event: offset: 4037, length: 0, timestamp: 41
text:>''<



!ENTRY org.apache.log4j 4 0 2022-12-03 16:05:41.745
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>/* Project 3
 * 
 * Parser
 * 
 * Federico Melo Barrero
 * 
 */

using gold.**

toSet(C) :=  {x|  x in C}

function createParser(A):IPushdownAutomaton begin
	
	// Declare each token as a variable (I'm not memorizing 40 tokens‥.)
	var PROG: String
	var GORP: String
	var VAR: String
	var PROC: String
	var CORP: String
	var if_: String
	var else_: String
	var fi: String
	var while_: String
	var do_: String
	var od: String
	var repeatTimes: String
	var per: String
	var isfacing: String
	var isValid: String
	var canWalk: String
	var not_: String
	var walk: String
	var jump: String
	var jumpTo: String
	var veer: String
	var look: String
	var drop: String
	var grab: String
	var get: String
	var free: String
	var pop: String
	var pick: String
	var left: String
	var right: String
	var around: String
	var north: String
	var south: String
	var east: String
	var west: String
	var front: String
	var back: String
	
	PROG := "D"
	GORP := "G"
	VAR := "A"
	PROC := "P"
	CORP := "C"
	if_ := "i"
	else_ := "s"
	fi := "f"
	while_ := "w"
	do_ := "x"
	od := "y"
	repeatTimes := "r"
	per := "p"
	isfacing := "b"
	isValid := "h"
	canWalk := "c"
	not_ := "n"
	walk := "k"
	jump := "j"
	jumpTo := "t"
	veer := "q"
	look := "l"
	drop := "d"
	grab := "a"
	get := "g"
	free := "e"
	pop := "o"
	pick := "m"
	left := "L"
	right := "R"
	around := "O"
	north := "N"
	south := "S"
	east := "E"
	west := "W"
	front := "F"
	back := "B"
	
	
	// Extra variables
	var par: String
	par = "("
	var key: String
	key = "{"
	var num: String
	num := "#"
	var v: String
	v := "v"
	var V: String
	V := "V"
	
	// States
	Q := {"qPROG","q,", "qCORP", "q2",
		 "q1",
		 "q;",
		 "qPROC",
		 "qPROC(",
		 "qPROC)",
		 "qPROC,",
		 "qPROCinstrs",
		 "qPROCp",
		 "qPROCv",
		 "qVAR",
		 "qv",
		 "qCORP",
		 "qBlock",
		 "qBlockEnd"}
	
	// Tokens (Automaton's alphabet)
	Σ := toSet(A) ∪ {' ', '\n', '\t'}
	// Stack's alphabet
	Γ := {'D', 'P', 'C', 'A', '(', 'v', '{'}
	// Initial state
	q₀ := "qPROG"
	// Final state
	F := {"qPROG"}
	
	M := GPushdownAutomaton(Q, Σ, Γ, q₀, F)

	SkipChars := {' ', '\n', '\t'}   // this will only  be used when testing only the parser, as the lexer removes SkipChars

	
	// AUTOMATON

	// A program defintion begins with the keyword PROG 
	M.delta("qPROG", "q1", PROG).push(PROG)
	// It ends the keyword GORP
	M.delta("qBlockEnd", "qPROG", GORP).pop(PROG)
	
	// A declaration of variables is the keyword VAR . 
	M.delta("q1", "qVAR", VAR).push(VAR)
	// followed by a list of names separated  by commas
	M.delta("qVAR", "qv", v).ignore()
	M.delta("qv", "q,", ',').push(v)
	M.delta("q,", "qv", v).pop(v)
	// The list is followed by ;
	M.delta("qVAR", "q2", ';').pop(VAR)  // Valid empty variable declaration: VAR ;
	M.delta("qv", "q2", ';').pop(VAR)
	
	// A procedure defintion is a the word PROC
	M.delta("q1", "qPROC", PROC).push(PROC)
	M.delta("q2", "qPROC", PROC).push(PROC)
	// followed by a name
	M.delta("qPROC", "qPROCv", v).changeTop(PROC, CORP)
	// followed by a list of parameters within parenthesis separated by commas
	M.delta("qPROCv", "qPROC(", '(').push(par)
	M.delta("qPROC(", "qPROCp", v).ignore()
	M.delta("qPROC(", "qPROC)", ')').pop(par)  // Procedure with no parameters: PROC hello( ) {‥.} CORP
	M.delta("qPROCp", "qPROC)", ')').pop(par)
	M.delta("qPROCp", "qPROC,", ',').push(v)
	M.delta("qPROC,", "qPROCp", v).pop(v)
	// followed by a block of instructions
	M.delta("qPROC)", "qPROCinstrs", '{').push(key)
	// and ending with the word CORP
	M.delta("qCORP", "q2", CORP).pop(CORP)
	
	
	// Block of instructions inside procedure
	// A block of instructions is a sequence of instructions separated by semicolons within curly brackets
	// TODO
	M.delta("qPROCinstrs", "qCORP", '}').pop(key)  // Empty block of instructions in procedure: PROC hi(‥.) { } CORP

	// name := n
	M.delta("qPROCinstrs", "qASSIGN", v).push(v)
	M.delta("qASSIGN", "q:=", '''=).push(v)


	// Single block of instructions in program, outside procedures
	// A block of instructions is a sequence of instructions separated by semicolons within curly brackets
	M.delta("q1", "qBlock", '{').push(key)
	M.delta("q2", "qBlock", '{').push(key)
	// TODO
	M.delta("qBlock", "qBlockEnd", '}').pop(key) // Empty instruction block : PROG ‥. { } GORP
	
	
	
	 // this will only  be used when testing only the parser as the lexer removes  SkipChars
	 
	 for each q in Q do
	 	for each s in SkipChars do
	 	   M.delta(q,q,λ+s).ignore()
	 	end
	 end
	
	
	return M

end

<<<
Document event: offset: 4038, length: 1, timestamp: 42
text:><



!ENTRY org.apache.log4j 4 0 2022-12-03 16:05:42.135
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>/* Project 3
 * 
 * Parser
 * 
 * Federico Melo Barrero
 * 
 */

using gold.**

toSet(C) :=  {x|  x in C}

function createParser(A):IPushdownAutomaton begin
	
	// Declare each token as a variable (I'm not memorizing 40 tokens‥.)
	var PROG: String
	var GORP: String
	var VAR: String
	var PROC: String
	var CORP: String
	var if_: String
	var else_: String
	var fi: String
	var while_: String
	var do_: String
	var od: String
	var repeatTimes: String
	var per: String
	var isfacing: String
	var isValid: String
	var canWalk: String
	var not_: String
	var walk: String
	var jump: String
	var jumpTo: String
	var veer: String
	var look: String
	var drop: String
	var grab: String
	var get: String
	var free: String
	var pop: String
	var pick: String
	var left: String
	var right: String
	var around: String
	var north: String
	var south: String
	var east: String
	var west: String
	var front: String
	var back: String
	
	PROG := "D"
	GORP := "G"
	VAR := "A"
	PROC := "P"
	CORP := "C"
	if_ := "i"
	else_ := "s"
	fi := "f"
	while_ := "w"
	do_ := "x"
	od := "y"
	repeatTimes := "r"
	per := "p"
	isfacing := "b"
	isValid := "h"
	canWalk := "c"
	not_ := "n"
	walk := "k"
	jump := "j"
	jumpTo := "t"
	veer := "q"
	look := "l"
	drop := "d"
	grab := "a"
	get := "g"
	free := "e"
	pop := "o"
	pick := "m"
	left := "L"
	right := "R"
	around := "O"
	north := "N"
	south := "S"
	east := "E"
	west := "W"
	front := "F"
	back := "B"
	
	
	// Extra variables
	var par: String
	par = "("
	var key: String
	key = "{"
	var num: String
	num := "#"
	var v: String
	v := "v"
	var V: String
	V := "V"
	
	// States
	Q := {"qPROG","q,", "qCORP", "q2",
		 "q1",
		 "q;",
		 "qPROC",
		 "qPROC(",
		 "qPROC)",
		 "qPROC,",
		 "qPROCinstrs",
		 "qPROCp",
		 "qPROCv",
		 "qVAR",
		 "qv",
		 "qCORP",
		 "qBlock",
		 "qBlockEnd"}
	
	// Tokens (Automaton's alphabet)
	Σ := toSet(A) ∪ {' ', '\n', '\t'}
	// Stack's alphabet
	Γ := {'D', 'P', 'C', 'A', '(', 'v', '{'}
	// Initial state
	q₀ := "qPROG"
	// Final state
	F := {"qPROG"}
	
	M := GPushdownAutomaton(Q, Σ, Γ, q₀, F)

	SkipChars := {' ', '\n', '\t'}   // this will only  be used when testing only the parser, as the lexer removes SkipChars

	
	// AUTOMATON

	// A program defintion begins with the keyword PROG 
	M.delta("qPROG", "q1", PROG).push(PROG)
	// It ends the keyword GORP
	M.delta("qBlockEnd", "qPROG", GORP).pop(PROG)
	
	// A declaration of variables is the keyword VAR . 
	M.delta("q1", "qVAR", VAR).push(VAR)
	// followed by a list of names separated  by commas
	M.delta("qVAR", "qv", v).ignore()
	M.delta("qv", "q,", ',').push(v)
	M.delta("q,", "qv", v).pop(v)
	// The list is followed by ;
	M.delta("qVAR", "q2", ';').pop(VAR)  // Valid empty variable declaration: VAR ;
	M.delta("qv", "q2", ';').pop(VAR)
	
	// A procedure defintion is a the word PROC
	M.delta("q1", "qPROC", PROC).push(PROC)
	M.delta("q2", "qPROC", PROC).push(PROC)
	// followed by a name
	M.delta("qPROC", "qPROCv", v).changeTop(PROC, CORP)
	// followed by a list of parameters within parenthesis separated by commas
	M.delta("qPROCv", "qPROC(", '(').push(par)
	M.delta("qPROC(", "qPROCp", v).ignore()
	M.delta("qPROC(", "qPROC)", ')').pop(par)  // Procedure with no parameters: PROC hello( ) {‥.} CORP
	M.delta("qPROCp", "qPROC)", ')').pop(par)
	M.delta("qPROCp", "qPROC,", ',').push(v)
	M.delta("qPROC,", "qPROCp", v).pop(v)
	// followed by a block of instructions
	M.delta("qPROC)", "qPROCinstrs", '{').push(key)
	// and ending with the word CORP
	M.delta("qCORP", "q2", CORP).pop(CORP)
	
	
	// Block of instructions inside procedure
	// A block of instructions is a sequence of instructions separated by semicolons within curly brackets
	// TODO
	M.delta("qPROCinstrs", "qCORP", '}').pop(key)  // Empty block of instructions in procedure: PROC hi(‥.) { } CORP

	// name := n
	M.delta("qPROCinstrs", "qASSIGN", v).push(v)
	M.delta("qASSIGN", "q:=", ''=).push(v)


	// Single block of instructions in program, outside procedures
	// A block of instructions is a sequence of instructions separated by semicolons within curly brackets
	M.delta("q1", "qBlock", '{').push(key)
	M.delta("q2", "qBlock", '{').push(key)
	// TODO
	M.delta("qBlock", "qBlockEnd", '}').pop(key) // Empty instruction block : PROG ‥. { } GORP
	
	
	
	 // this will only  be used when testing only the parser as the lexer removes  SkipChars
	 
	 for each q in Q do
	 	for each s in SkipChars do
	 	   M.delta(q,q,λ+s).ignore()
	 	end
	 end
	
	
	return M

end

<<<
Document event: offset: 4037, length: 1, timestamp: 43
text:><



!ENTRY org.apache.log4j 4 0 2022-12-03 16:35:52.586
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>/* Project 3
 * 
 * Parser
 * 
 * Federico Melo Barrero
 * 
 */

using gold.**

toSet(C) :=  {x|  x in C}

function createParser(A):IPushdownAutomaton begin
	
	// Declare each token as a variable (I'm not memorizing 40 tokens‥.)
	var PROG: String
	var GORP: String
	var VAR: String
	var PROC: String
	var CORP: String
	var if_: String
	var else_: String
	var fi: String
	var while_: String
	var do_: String
	var od: String
	var repeatTimes: String
	var per: String
	var isfacing: String
	var isValid: String
	var canWalk: String
	var not_: String
	var walk: String
	var jump: String
	var jumpTo: String
	var veer: String
	var look: String
	var drop: String
	var grab: String
	var get: String
	var free: String
	var pop: String
	var pick: String
	var left: String
	var right: String
	var around: String
	var north: String
	var south: String
	var east: String
	var west: String
	var front: String
	var back: String
	
	PROG := "D"
	GORP := "G"
	VAR := "A"
	PROC := "P"
	CORP := "C"
	if_ := "i"
	else_ := "s"
	fi := "f"
	while_ := "w"
	do_ := "x"
	od := "y"
	repeatTimes := "r"
	per := "p"
	isfacing := "b"
	isValid := "h"
	canWalk := "c"
	not_ := "n"
	walk := "k"
	jump := "j"
	jumpTo := "t"
	veer := "q"
	look := "l"
	drop := "d"
	grab := "a"
	get := "g"
	free := "e"
	pop := "o"
	pick := "m"
	left := "L"
	right := "R"
	around := "O"
	north := "N"
	south := "S"
	east := "E"
	west := "W"
	front := "F"
	back := "B"
	
	
	// Extra variables
	var par: String
	par = "("
	var key: String
	key = "{"
	var num: String
	num := "#"
	var v: String
	v := "v"
	var V: String
	V := "V"
	
	
	var commandEnd: String
	commandEnd := "U"
	var commandBegin: String
	commandBegin := "J"
	
	
	// States
	Q := {"qPROG","q,", "qCORP", "q2",
		 "q1",
		 "q;",
		 "qPROC",
		 "qPROC(",
		 "qPROC)",
		 "qPROC,",
		 "qPROCinstrs",
		 "qPROCp",
		 "qPROCv",
		 "qVAR",
		 "qv",
		 "qCORP",
		 "qBlock",
		 "qBlockEnd",
		 "qASSIGN",
		 "q:=",
		 "qInstr;"}
	
	// Tokens (Automaton's alphabet)
	Σ := toSet(A) ∪ {' ', '\n', '\t'}
	// Stack's alphabet
	Γ := {'D', 'P', 'C', 'A', '(', 'v', '{', 'U'}
	// Initial state
	q₀ := "qPROG"
	// Final state
	F := {"qPROG"}
	
	M := GPushdownAutomaton(Q, Σ, Γ, q₀, F)

	SkipChars := {' ', '\n', '\t'}   // this will only  be used when testing only the parser, as the lexer removes SkipChars

	
	// AUTOMATON

	// A program defintion begins with the keyword PROG 
	M.delta("qPROG", "q1", PROG).push(PROG)
	// It ends the keyword GORP
	M.delta("qBlockEnd", "qPROG", GORP).pop(PROG)
	
	// A declaration of variables is the keyword VAR . 
	M.delta("q1", "qVAR", VAR).push(VAR)
	// followed by a list of names separated  by commas
	M.delta("qVAR", "qv", v).ignore()
	M.delta("qv", "q,", ',').push(v)
	M.delta("q,", "qv", v).pop(v)
	// The list is followed by ;
	M.delta("qVAR", "q2", ';').pop(VAR)  // Valid empty variable declaration: VAR ;
	M.delta("qv", "q2", ';').pop(VAR)
	
	// A procedure defintion is a the word PROC
	M.delta("q1", "qPROC", PROC).push(PROC)
	M.delta("q2", "qPROC", PROC).push(PROC)
	// followed by a name
	M.delta("qPROC", "qPROCv", v).changeTop(PROC, CORP)
	// followed by a list of parameters within parenthesis separated by commas
	M.delta("qPROCv", "qPROC(", '(').push(par)
	M.delta("qPROC(", "qPROCp", v).ignore()
	M.delta("qPROC(", "qPROC)", ')').pop(par)  // Procedure with no parameters: PROC hello( ) {‥.} CORP
	M.delta("qPROCp", "qPROC)", ')').pop(par)
	M.delta("qPROCp", "qPROC,", ',').push(v)
	M.delta("qPROC,", "qPROCp", v).pop(v)
	// followed by a block of instructions
	M.delta("qPROC)", "qPROCinstrs", '{').push(key)
	// and ending with the word CORP
	M.delta("qCORP", "q2", CORP).pop(CORP)
	
	
	// Block of instructions inside procedure
	M.delta("qPROCinstrs", "qCORP", '}').pop(key)  // Empty block of instructions in procedure: PROC hi(‥.) { } CORP
	M.delta("qPROCinstrs", "qCORP", '}').pop(key+commandEnd)

	// Single block of instructions in program, outside procedures
	M.delta("q1", "qBlock", '{').push(key)
	M.delta("q2", "qBlock", '{').push(key)
	M.delta("qBlock", "qBlockEnd", '}').pop(key) // Empty instruction block : PROG ‥. { } GORP
	M.delta("qBlock", "qBlockEnd", '}').pop(key+commandEnd)

	// A block of instructions is a sequence of instructions separated by semicolons within curly brackets
	for each qBlock in {"qPROCinstrs", "qBlock"} do
		
	// name := n
	M.delta(qBlock, "qASSIGN", v).push(v)
	M.delta(qBlock, "qASSIGN", v).changeTop(ço)
	M.delta("qASSIGN", "q:=", '=').ignore()
	M.delta("q:=", qBlock, "#").changeTop(v, commandEnd)
	
	
	// instr ; instr
	M.delta(qBlock, "qInstr;", ";").changeTop(commandEnd, commandBegin)
	end

	
	 // this will only  be used when testing only the parser as the lexer removes  SkipChars
	 
	 for each q in Q do
	 	for each s in SkipChars do
	 	   M.delta(q,q,λ+s).ignore()
	 	end
	 end
	
	
	return M

end

<<<
Document event: offset: 4595, length: 0, timestamp: 528
text:>o<



!ENTRY org.apache.log4j 4 0 2022-12-03 16:35:52.994
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>/* Project 3
 * 
 * Parser
 * 
 * Federico Melo Barrero
 * 
 */

using gold.**

toSet(C) :=  {x|  x in C}

function createParser(A):IPushdownAutomaton begin
	
	// Declare each token as a variable (I'm not memorizing 40 tokens‥.)
	var PROG: String
	var GORP: String
	var VAR: String
	var PROC: String
	var CORP: String
	var if_: String
	var else_: String
	var fi: String
	var while_: String
	var do_: String
	var od: String
	var repeatTimes: String
	var per: String
	var isfacing: String
	var isValid: String
	var canWalk: String
	var not_: String
	var walk: String
	var jump: String
	var jumpTo: String
	var veer: String
	var look: String
	var drop: String
	var grab: String
	var get: String
	var free: String
	var pop: String
	var pick: String
	var left: String
	var right: String
	var around: String
	var north: String
	var south: String
	var east: String
	var west: String
	var front: String
	var back: String
	
	PROG := "D"
	GORP := "G"
	VAR := "A"
	PROC := "P"
	CORP := "C"
	if_ := "i"
	else_ := "s"
	fi := "f"
	while_ := "w"
	do_ := "x"
	od := "y"
	repeatTimes := "r"
	per := "p"
	isfacing := "b"
	isValid := "h"
	canWalk := "c"
	not_ := "n"
	walk := "k"
	jump := "j"
	jumpTo := "t"
	veer := "q"
	look := "l"
	drop := "d"
	grab := "a"
	get := "g"
	free := "e"
	pop := "o"
	pick := "m"
	left := "L"
	right := "R"
	around := "O"
	north := "N"
	south := "S"
	east := "E"
	west := "W"
	front := "F"
	back := "B"
	
	
	// Extra variables
	var par: String
	par = "("
	var key: String
	key = "{"
	var num: String
	num := "#"
	var v: String
	v := "v"
	var V: String
	V := "V"
	
	
	var commandEnd: String
	commandEnd := "U"
	var commandBegin: String
	commandBegin := "J"
	
	
	// States
	Q := {"qPROG","q,", "qCORP", "q2",
		 "q1",
		 "q;",
		 "qPROC",
		 "qPROC(",
		 "qPROC)",
		 "qPROC,",
		 "qPROCinstrs",
		 "qPROCp",
		 "qPROCv",
		 "qVAR",
		 "qv",
		 "qCORP",
		 "qBlock",
		 "qBlockEnd",
		 "qASSIGN",
		 "q:=",
		 "qInstr;"}
	
	// Tokens (Automaton's alphabet)
	Σ := toSet(A) ∪ {' ', '\n', '\t'}
	// Stack's alphabet
	Γ := {'D', 'P', 'C', 'A', '(', 'v', '{', 'U'}
	// Initial state
	q₀ := "qPROG"
	// Final state
	F := {"qPROG"}
	
	M := GPushdownAutomaton(Q, Σ, Γ, q₀, F)

	SkipChars := {' ', '\n', '\t'}   // this will only  be used when testing only the parser, as the lexer removes SkipChars

	
	// AUTOMATON

	// A program defintion begins with the keyword PROG 
	M.delta("qPROG", "q1", PROG).push(PROG)
	// It ends the keyword GORP
	M.delta("qBlockEnd", "qPROG", GORP).pop(PROG)
	
	// A declaration of variables is the keyword VAR . 
	M.delta("q1", "qVAR", VAR).push(VAR)
	// followed by a list of names separated  by commas
	M.delta("qVAR", "qv", v).ignore()
	M.delta("qv", "q,", ',').push(v)
	M.delta("q,", "qv", v).pop(v)
	// The list is followed by ;
	M.delta("qVAR", "q2", ';').pop(VAR)  // Valid empty variable declaration: VAR ;
	M.delta("qv", "q2", ';').pop(VAR)
	
	// A procedure defintion is a the word PROC
	M.delta("q1", "qPROC", PROC).push(PROC)
	M.delta("q2", "qPROC", PROC).push(PROC)
	// followed by a name
	M.delta("qPROC", "qPROCv", v).changeTop(PROC, CORP)
	// followed by a list of parameters within parenthesis separated by commas
	M.delta("qPROCv", "qPROC(", '(').push(par)
	M.delta("qPROC(", "qPROCp", v).ignore()
	M.delta("qPROC(", "qPROC)", ')').pop(par)  // Procedure with no parameters: PROC hello( ) {‥.} CORP
	M.delta("qPROCp", "qPROC)", ')').pop(par)
	M.delta("qPROCp", "qPROC,", ',').push(v)
	M.delta("qPROC,", "qPROCp", v).pop(v)
	// followed by a block of instructions
	M.delta("qPROC)", "qPROCinstrs", '{').push(key)
	// and ending with the word CORP
	M.delta("qCORP", "q2", CORP).pop(CORP)
	
	
	// Block of instructions inside procedure
	M.delta("qPROCinstrs", "qCORP", '}').pop(key)  // Empty block of instructions in procedure: PROC hi(‥.) { } CORP
	M.delta("qPROCinstrs", "qCORP", '}').pop(key+commandEnd)

	// Single block of instructions in program, outside procedures
	M.delta("q1", "qBlock", '{').push(key)
	M.delta("q2", "qBlock", '{').push(key)
	M.delta("qBlock", "qBlockEnd", '}').pop(key) // Empty instruction block : PROG ‥. { } GORP
	M.delta("qBlock", "qBlockEnd", '}').pop(key+commandEnd)

	// A block of instructions is a sequence of instructions separated by semicolons within curly brackets
	for each qBlock in {"qPROCinstrs", "qBlock"} do
		
	// name := n
	M.delta(qBlock, "qASSIGN", v).push(v)
	M.delta(qBlock, "qASSIGN", v).changeTop(ç)
	M.delta("qASSIGN", "q:=", '=').ignore()
	M.delta("q:=", qBlock, "#").changeTop(v, commandEnd)
	
	
	// instr ; instr
	M.delta(qBlock, "qInstr;", ";").changeTop(commandEnd, commandBegin)
	end

	
	 // this will only  be used when testing only the parser as the lexer removes  SkipChars
	 
	 for each q in Q do
	 	for each s in SkipChars do
	 	   M.delta(q,q,λ+s).ignore()
	 	end
	 end
	
	
	return M

end

<<<
Document event: offset: 4595, length: 1, timestamp: 529
text:><


