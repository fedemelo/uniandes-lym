// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/ParserRobot202220.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class ParserRobot202220 {
  public static Object toSet(Object C) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v1=$newSet();
      $v2:for (Object x:GCollections.unmodifiableCollection(C)) {
        $v1.add(x);
      }
      $result=$v1;
      if (true) break $try;
      $line=11;
      $rethrow(new RuntimeException("The function \"toSet(C:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ParserRobot202220.class,"toSet",$line);
    }
    return $result;
  }
  public static IPushdownAutomaton createParser(Object A) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=16;
      String PROG=null;
      PROG=$defaultValue(String.class);
      $line=17;
      String GORP=null;
      GORP=$defaultValue(String.class);
      $line=18;
      String VAR=null;
      VAR=$defaultValue(String.class);
      $line=19;
      String PROC=null;
      PROC=$defaultValue(String.class);
      $line=20;
      String CORP=null;
      CORP=$defaultValue(String.class);
      $line=21;
      String if_=null;
      if_=$defaultValue(String.class);
      $line=22;
      String else_=null;
      else_=$defaultValue(String.class);
      $line=23;
      String fi=null;
      fi=$defaultValue(String.class);
      $line=24;
      String while_=null;
      while_=$defaultValue(String.class);
      $line=25;
      String do_=null;
      do_=$defaultValue(String.class);
      $line=26;
      String od=null;
      od=$defaultValue(String.class);
      $line=27;
      String repeatTimes=null;
      repeatTimes=$defaultValue(String.class);
      $line=28;
      String per=null;
      per=$defaultValue(String.class);
      $line=29;
      String isfacing=null;
      isfacing=$defaultValue(String.class);
      $line=30;
      String isValid=null;
      isValid=$defaultValue(String.class);
      $line=31;
      String canWalk=null;
      canWalk=$defaultValue(String.class);
      $line=32;
      String not_=null;
      not_=$defaultValue(String.class);
      $line=33;
      String walk=null;
      walk=$defaultValue(String.class);
      $line=34;
      String jump=null;
      jump=$defaultValue(String.class);
      $line=35;
      String jumpTo=null;
      jumpTo=$defaultValue(String.class);
      $line=36;
      String veer=null;
      veer=$defaultValue(String.class);
      $line=37;
      String look=null;
      look=$defaultValue(String.class);
      $line=38;
      String drop=null;
      drop=$defaultValue(String.class);
      $line=39;
      String grab=null;
      grab=$defaultValue(String.class);
      $line=40;
      String get=null;
      get=$defaultValue(String.class);
      $line=41;
      String free=null;
      free=$defaultValue(String.class);
      $line=42;
      String pop=null;
      pop=$defaultValue(String.class);
      $line=43;
      String pick=null;
      pick=$defaultValue(String.class);
      $line=44;
      String left=null;
      left=$defaultValue(String.class);
      $line=45;
      String right=null;
      right=$defaultValue(String.class);
      $line=46;
      String around=null;
      around=$defaultValue(String.class);
      $line=47;
      String north=null;
      north=$defaultValue(String.class);
      $line=48;
      String south=null;
      south=$defaultValue(String.class);
      $line=49;
      String east=null;
      east=$defaultValue(String.class);
      $line=50;
      String west=null;
      west=$defaultValue(String.class);
      $line=51;
      String front=null;
      front=$defaultValue(String.class);
      $line=52;
      String back=null;
      back=$defaultValue(String.class);
      $line=54;
      PROG=$cast(String.class,$fix("D"));
      $line=55;
      GORP=$cast(String.class,$fix("G"));
      $line=56;
      VAR=$cast(String.class,$fix("A"));
      $line=57;
      PROC=$cast(String.class,$fix("P"));
      $line=58;
      CORP=$cast(String.class,$fix("C"));
      $line=59;
      if_=$cast(String.class,$fix("i"));
      $line=60;
      else_=$cast(String.class,$fix("s"));
      $line=61;
      fi=$cast(String.class,$fix("f"));
      $line=62;
      while_=$cast(String.class,$fix("w"));
      $line=63;
      do_=$cast(String.class,$fix("x"));
      $line=64;
      od=$cast(String.class,$fix("y"));
      $line=65;
      repeatTimes=$cast(String.class,$fix("r"));
      $line=66;
      per=$cast(String.class,$fix("p"));
      $line=67;
      isfacing=$cast(String.class,$fix("b"));
      $line=68;
      isValid=$cast(String.class,$fix("h"));
      $line=69;
      canWalk=$cast(String.class,$fix("c"));
      $line=70;
      not_=$cast(String.class,$fix("n"));
      $line=71;
      walk=$cast(String.class,$fix("k"));
      $line=72;
      jump=$cast(String.class,$fix("j"));
      $line=73;
      jumpTo=$cast(String.class,$fix("t"));
      $line=74;
      veer=$cast(String.class,$fix("q"));
      $line=75;
      look=$cast(String.class,$fix("l"));
      $line=76;
      drop=$cast(String.class,$fix("d"));
      $line=77;
      grab=$cast(String.class,$fix("a"));
      $line=78;
      get=$cast(String.class,$fix("g"));
      $line=79;
      free=$cast(String.class,$fix("e"));
      $line=80;
      pop=$cast(String.class,$fix("o"));
      $line=81;
      pick=$cast(String.class,$fix("m"));
      $line=82;
      left=$cast(String.class,$fix("L"));
      $line=83;
      right=$cast(String.class,$fix("R"));
      $line=84;
      around=$cast(String.class,$fix("O"));
      $line=85;
      north=$cast(String.class,$fix("N"));
      $line=86;
      south=$cast(String.class,$fix("S"));
      $line=87;
      east=$cast(String.class,$fix("E"));
      $line=88;
      west=$cast(String.class,$fix("W"));
      $line=89;
      front=$cast(String.class,$fix("F"));
      $line=90;
      back=$cast(String.class,$fix("B"));
      $line=93;
      String varInicial=null;
      varInicial=$defaultValue(String.class);
      $line=94;
      varInicial=$cast(String.class,$fix("Z"));
      $line=96;
      String varDecl=null;
      varDecl=$defaultValue(String.class);
      $line=97;
      varDecl=$cast(String.class,$fix("H"));
      $line=99;
      String procDefs=null;
      procDefs=$defaultValue(String.class);
      $line=100;
      procDefs=$cast(String.class,$fix("I"));
      $line=102;
      String block=null;
      block=$defaultValue(String.class);
      $line=103;
      block=$cast(String.class,$fix("J"));
      $line=105;
      String procDef=null;
      procDef=$defaultValue(String.class);
      $line=106;
      procDef=$cast(String.class,$fix("K"));
      $line=108;
      String vars=null;
      vars=$defaultValue(String.class);
      $line=109;
      vars=$cast(String.class,$fix("M"));
      $line=111;
      String params=null;
      params=$defaultValue(String.class);
      $line=112;
      params=$cast(String.class,$fix("Q"));
      $line=114;
      String instrs=null;
      instrs=$defaultValue(String.class);
      $line=115;
      instrs=$cast(String.class,$fix("T"));
      $line=117;
      String command=null;
      command=$defaultValue(String.class);
      $line=118;
      command=$cast(String.class,$fix("U"));
      $line=120;
      String ctrl_struct=null;
      ctrl_struct=$defaultValue(String.class);
      $line=121;
      ctrl_struct=$cast(String.class,$fix("X"));
      $line=123;
      String proc_call=null;
      proc_call=$defaultValue(String.class);
      $line=124;
      proc_call=$cast(String.class,$fix("Y"));
      $line=126;
      String var_=null;
      var_=$defaultValue(String.class);
      $line=127;
      var_=$cast(String.class,$fix("u"));
      $line=130;
      Object Q=$fix(GCollections.asSet("I","q","F","qC","qS","qP"));
      $line=133;
      Object \u03A3=$fix($opUnionY(ParserRobot202220.toSet(A),GCollections.asSet(' ','\n','\t')));
      $line=135;
      Object \u0393=$fix($opUnionY($opUnionY($opIntvlY('a','z'),$opIntvlY('A','Z')),GCollections.asSet('#','=','$','{','}','(',')',',',';')));
      $line=137;
      Object q_0=$fix("I");
      $line=138;
      Object F=$fix(GCollections.asSet("F"));
      $line=140;
      Object M=$fix($invokeConstructor(GPushdownAutomaton.class,new Object[]{Q,\u03A3,\u0393,q_0,F}));
      $line=142;
      Object SkipChars=$fix(GCollections.asSet(' ','\n','\t'));
      $line=146;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("I","q",$cast(java.lang.String.class,"")),new Object[]{$opAdditY("$",varInicial)});
      $line=147;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q","F",$cast(java.lang.String.class,"")),new Object[]{"$"});
      $line=150;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q","q",$cast(java.lang.String.class,"")),new Object[]{varInicial,$opAdditY($opAdditY($opAdditY($opAdditY(GORP,block),procDefs),varDecl),PROG)});
      $line=153;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q","q",$cast(java.lang.String.class,"")),new Object[]{varDecl,""});
      $line=154;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q","q",$cast(java.lang.String.class,"")),new Object[]{varDecl,$opAdditY($opAdditY(';',vars),VAR)});
      $line=156;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q","q",$cast(java.lang.String.class,"")),new Object[]{vars,"v"});
      $line=157;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q","q",$cast(java.lang.String.class,"")),new Object[]{vars,$opAdditY(vars,",v")});
      $line=160;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q","q",$cast(java.lang.String.class,"")),new Object[]{procDefs,""});
      $line=161;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q","q",$cast(java.lang.String.class,"")),new Object[]{procDefs,$opAdditY(procDef,procDefs)});
      $line=163;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q","q",$cast(java.lang.String.class,"")),new Object[]{procDef,$opAdditY($opAdditY($opAdditY($opAdditY($opAdditY($opAdditY(CORP,block),')'),params),'('),'v'),PROC)});
      $line=164;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q","q",$cast(java.lang.String.class,"")),new Object[]{procDef,$opAdditY($opAdditY($opAdditY($opAdditY($opAdditY(CORP,block),')'),'('),'v'),PROC)});
      $line=167;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q","q",$cast(java.lang.String.class,"")),new Object[]{params,"v"});
      $line=168;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q","q",$cast(java.lang.String.class,"")),new Object[]{params,$opAdditY(params,",v")});
      $line=171;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q","q",$cast(java.lang.String.class,"")),new Object[]{block,"}{"});
      $line=172;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q","q",$cast(java.lang.String.class,"")),new Object[]{block,$opAdditY($opAdditY("}",instrs),"{")});
      $line=180;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qC","qC",$cast(java.lang.String.class,"")),new Object[]{command,$opAdditY($opAdditY("#","="),"v")});
      $line=182;
      for (Object $v3:GCollections.unmodifiableCollection(GCollections.asSet(walk,jump,drop,grab,get,free,pop,pick))) {
        Object comm=$v3;
        $line=183;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qC","qC",$cast(java.lang.String.class,"")),new Object[]{comm,$opAdditY($opAdditY($opAdditY(")",var_),"("),comm)});
      }
      $line=186;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qC","qC",$cast(java.lang.String.class,"")),new Object[]{var_,"v"});
      $line=187;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qC","qC",$cast(java.lang.String.class,"")),new Object[]{var_,"#"});
      $line=189;
      for (Object $v4:GCollections.unmodifiableCollection(GCollections.asSet(left,right,around))) {
        Object D=$v4;
        $line=190;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qC","qC",$cast(java.lang.String.class,"")),new Object[]{veer,$opAdditY($opAdditY($opAdditY(")",D),"("),veer)});
      }
      $line=193;
      for (Object $v5:GCollections.unmodifiableCollection(GCollections.asSet(north,south,east,west))) {
        Object O=$v5;
        $line=194;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qC","qC",$cast(java.lang.String.class,"")),new Object[]{look,$opAdditY($opAdditY($opAdditY(")",O),"("),look)});
      }
      $line=198;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qC","qC",$cast(java.lang.String.class,"")),new Object[]{jumpTo,$opAdditY($opAdditY($opAdditY($opAdditY($opAdditY(")",var_),","),var_),"("),jumpTo)});
      $line=200;
      for (Object $v6:GCollections.unmodifiableCollection(GCollections.asSet(front,right,left,back))) {
        Object d=$v6;
        $line=201;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qC","qC",$cast(java.lang.String.class,"")),new Object[]{walk,$opAdditY($opAdditY($opAdditY($opAdditY($opAdditY(")",var_),","),d),"("),walk)});
      }
      $line=204;
      for (Object $v7:GCollections.unmodifiableCollection(GCollections.asSet(north,south,west,east))) {
        Object o=$v7;
        $line=205;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qC","qC",$cast(java.lang.String.class,"")),new Object[]{walk,$opAdditY($opAdditY($opAdditY($opAdditY($opAdditY(")",var_),","),o),"("),walk)});
      }
      $line=209;
      for (Object $v8:GCollections.unmodifiableCollection(GCollections.asSet(walk,jump,jumpTo,veer,look,drop,grab,get,free,pop,pick,left,right,around,north,south,east,west,front,back))) {
        Object terminal=$v8;
        $line=210;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qC","qC",$cast(java.lang.String.class,terminal)),new Object[]{terminal});
      }
      $line=214;
      for (Object $v9:GCollections.unmodifiableCollection(GCollections.asSet(GORP,per,od,fi,else_,while_,not_,VAR,canWalk,repeatTimes,CORP,PROC,if_,isValid,PROG,do_,isfacing,"v","V","#","=","{","}","(",")",",",";"))) {
        Object terminal=$v9;
        $line=215;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q","q",$cast(java.lang.String.class,terminal)),new Object[]{terminal});
      }
      $line=220;
      for (Object $v10:GCollections.unmodifiableCollection(Q)) {
        Object q=$v10;
        $line=221;
        for (Object $v11:GCollections.unmodifiableCollection(SkipChars)) {
          Object s=$v11;
          $line=222;
          $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(q,q,$cast(java.lang.String.class,$opAdditY("",s))),new Object[]{});
        }
      }
      $line=227;
      $result=M;
      if (true) break $try;
      $line=229;
      $rethrow(new RuntimeException("The function \"createParser(A:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ParserRobot202220.class,"createParser",$line);
    }
    return $cast(IPushdownAutomaton.class,$result);
  }
}
