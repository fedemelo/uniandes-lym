// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/ParserRobot202220.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class ParserRobot202220 {
  public static Object toSet(Object C) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v1=$newSet();
      $v2:for (Object x:GCollections.unmodifiableCollection(C)) {
        $v1.add(x);
      }
      $result=$v1;
      if (true) break $try;
      $line=11;
      $rethrow(new RuntimeException("The function \"toSet(C:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ParserRobot202220.class,"toSet",$line);
    }
    return $result;
  }
  public static IPushdownAutomaton createParser(Object A) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=16;
      String PROG=null;
      PROG=$defaultValue(String.class);
      $line=17;
      String GORP=null;
      GORP=$defaultValue(String.class);
      $line=18;
      String VAR=null;
      VAR=$defaultValue(String.class);
      $line=19;
      String PROC=null;
      PROC=$defaultValue(String.class);
      $line=20;
      String CORP=null;
      CORP=$defaultValue(String.class);
      $line=21;
      String if_=null;
      if_=$defaultValue(String.class);
      $line=22;
      String else_=null;
      else_=$defaultValue(String.class);
      $line=23;
      String fi=null;
      fi=$defaultValue(String.class);
      $line=24;
      String while_=null;
      while_=$defaultValue(String.class);
      $line=25;
      String do_=null;
      do_=$defaultValue(String.class);
      $line=26;
      String od=null;
      od=$defaultValue(String.class);
      $line=27;
      String repeatTimes=null;
      repeatTimes=$defaultValue(String.class);
      $line=28;
      String per=null;
      per=$defaultValue(String.class);
      $line=29;
      String isfacing=null;
      isfacing=$defaultValue(String.class);
      $line=30;
      String isValid=null;
      isValid=$defaultValue(String.class);
      $line=31;
      String canWalk=null;
      canWalk=$defaultValue(String.class);
      $line=32;
      String not_=null;
      not_=$defaultValue(String.class);
      $line=33;
      String walk=null;
      walk=$defaultValue(String.class);
      $line=34;
      String jump=null;
      jump=$defaultValue(String.class);
      $line=35;
      String jumpTo=null;
      jumpTo=$defaultValue(String.class);
      $line=36;
      String veer=null;
      veer=$defaultValue(String.class);
      $line=37;
      String look=null;
      look=$defaultValue(String.class);
      $line=38;
      String drop=null;
      drop=$defaultValue(String.class);
      $line=39;
      String grab=null;
      grab=$defaultValue(String.class);
      $line=40;
      String get=null;
      get=$defaultValue(String.class);
      $line=41;
      String free=null;
      free=$defaultValue(String.class);
      $line=42;
      String pop=null;
      pop=$defaultValue(String.class);
      $line=43;
      String pick=null;
      pick=$defaultValue(String.class);
      $line=44;
      String left=null;
      left=$defaultValue(String.class);
      $line=45;
      String right=null;
      right=$defaultValue(String.class);
      $line=46;
      String around=null;
      around=$defaultValue(String.class);
      $line=47;
      String north=null;
      north=$defaultValue(String.class);
      $line=48;
      String south=null;
      south=$defaultValue(String.class);
      $line=49;
      String east=null;
      east=$defaultValue(String.class);
      $line=50;
      String west=null;
      west=$defaultValue(String.class);
      $line=51;
      String front=null;
      front=$defaultValue(String.class);
      $line=52;
      String back=null;
      back=$defaultValue(String.class);
      $line=54;
      PROG=$cast(String.class,$fix("D"));
      $line=55;
      GORP=$cast(String.class,$fix("G"));
      $line=56;
      VAR=$cast(String.class,$fix("A"));
      $line=57;
      PROC=$cast(String.class,$fix("P"));
      $line=58;
      CORP=$cast(String.class,$fix("C"));
      $line=59;
      if_=$cast(String.class,$fix("i"));
      $line=60;
      else_=$cast(String.class,$fix("s"));
      $line=61;
      fi=$cast(String.class,$fix("f"));
      $line=62;
      while_=$cast(String.class,$fix("w"));
      $line=63;
      do_=$cast(String.class,$fix("x"));
      $line=64;
      od=$cast(String.class,$fix("y"));
      $line=65;
      repeatTimes=$cast(String.class,$fix("r"));
      $line=66;
      per=$cast(String.class,$fix("p"));
      $line=67;
      isfacing=$cast(String.class,$fix("b"));
      $line=68;
      isValid=$cast(String.class,$fix("h"));
      $line=69;
      canWalk=$cast(String.class,$fix("c"));
      $line=70;
      not_=$cast(String.class,$fix("n"));
      $line=71;
      walk=$cast(String.class,$fix("k"));
      $line=72;
      jump=$cast(String.class,$fix("j"));
      $line=73;
      jumpTo=$cast(String.class,$fix("t"));
      $line=74;
      veer=$cast(String.class,$fix("q"));
      $line=75;
      look=$cast(String.class,$fix("l"));
      $line=76;
      drop=$cast(String.class,$fix("d"));
      $line=77;
      grab=$cast(String.class,$fix("a"));
      $line=78;
      get=$cast(String.class,$fix("g"));
      $line=79;
      free=$cast(String.class,$fix("e"));
      $line=80;
      pop=$cast(String.class,$fix("o"));
      $line=81;
      pick=$cast(String.class,$fix("m"));
      $line=82;
      left=$cast(String.class,$fix("L"));
      $line=83;
      right=$cast(String.class,$fix("R"));
      $line=84;
      around=$cast(String.class,$fix("O"));
      $line=85;
      north=$cast(String.class,$fix("N"));
      $line=86;
      south=$cast(String.class,$fix("S"));
      $line=87;
      east=$cast(String.class,$fix("E"));
      $line=88;
      west=$cast(String.class,$fix("W"));
      $line=89;
      front=$cast(String.class,$fix("F"));
      $line=90;
      back=$cast(String.class,$fix("B"));
      $line=94;
      String par=null;
      par=$defaultValue(String.class);
      $line=95;
      par=$cast(String.class,$fix("("));
      $line=96;
      String key=null;
      key=$defaultValue(String.class);
      $line=97;
      key=$cast(String.class,$fix("{"));
      $line=98;
      String num=null;
      num=$defaultValue(String.class);
      $line=99;
      num=$cast(String.class,$fix("#"));
      $line=100;
      String v=null;
      v=$defaultValue(String.class);
      $line=101;
      v=$cast(String.class,$fix("v"));
      $line=103;
      String instrEnd=null;
      instrEnd=$defaultValue(String.class);
      $line=104;
      instrEnd=$cast(String.class,$fix("U"));
      $line=105;
      String instrBegin=null;
      instrBegin=$defaultValue(String.class);
      $line=106;
      instrBegin=$cast(String.class,$fix("J"));
      $line=107;
      String procDef=null;
      procDef=$defaultValue(String.class);
      $line=108;
      procDef=$cast(String.class,$fix("H"));
      $line=109;
      String notCond=null;
      notCond=$defaultValue(String.class);
      $line=110;
      notCond=$cast(String.class,$fix("I"));
      $line=114;
      Object Q=$fix(GCollections.asSet("qPROG","q,","qCORP","q2","q1","q;","qPROC","qPROC(","qPROC)","qPROC,","qPROCinstrs","qPROCp","qPROCv","qVAR","qv","qCORP","qBlock","qBlockEnd","qASSIGN","q:=","qInstr;","qLookP","qDropP","qJump(","qJump","qPopP","qGrab(","qVeer(","qFree(","qDrop)","qPop","qWalk","qJump)","qFree)","qWalkP","qLook","qVeer)","qGet)","qPop(","qFree","qDrop(","qPickP","qJumpP","qGrab","qWalk(","qLook(","qDrop","qGet","qGrabP","qWalk)","qGet(","qPick)","qLook)","qGrab)","qVeer","qFreeP","qVeerP","qPop)","qGetP","qPick(","qPick","qJumpTo","qJumpTo(","qJumpToP","qJumpToP,","qJumpToP2","qWalkP1","qWalkP1,","qWalkP2","qCondition","qIsfacing","qIsfacing(","qIsfacingP","qProcCallP,","qProcCallP,","qIsValid","qIsValid(","qIsValidP1","qIsValidP1,","qIsValidP2","qCondition","qCanWalk","qCanWalk(","qCanWalkP1","qCanWalkP1,","qCanWalkP2","qIf","qIfCondition","qIfCondition)","qIfBlock","qIfBlockEnd","qElse","qElseBlock","qElseBlockEnd","qWhile","qWhileCondition","qWhileCondition)","qDo","qWhileBlock","qWhileBlockEnd","qRepeatTimes","qRepeatTimesN","qRepeatTimesBlock","qRepeatTimesBlockEnd","qNot","qNotCondition","qProcCall","qProcCall(","qProcCallP","qProcCallP,"));
      $line=223;
      Object \u03A3=$fix($opUnionY(ParserRobot202220.toSet(A),GCollections.asSet(' ','\n','\t')));
      $line=225;
      Object \u0393=$fix($opUnionY($opUnionY($opIntvlY('A','Z'),$opIntvlY('a','z')),GCollections.asSet('(','{')));
      $line=227;
      Object q_0=$fix("qPROG");
      $line=229;
      Object F=$fix(GCollections.asSet("qPROG"));
      $line=231;
      Object M=$fix($invokeConstructor(GPushdownAutomaton.class,new Object[]{Q,\u03A3,\u0393,q_0,F}));
      $line=233;
      Object SkipChars=$fix(GCollections.asSet(' ','\n','\t'));
      $line=239;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROG","q1",$cast(java.lang.String.class,PROG)),new Object[]{PROG});
      $line=241;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qBlockEnd","qPROG",$cast(java.lang.String.class,GORP)),new Object[]{PROG});
      $line=244;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("q1","qVAR",$cast(java.lang.String.class,VAR)),new Object[]{VAR});
      $line=246;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta("qVAR","qv",$cast(java.lang.String.class,v)),new Object[]{});
      $line=247;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qv","q,",$cast(java.lang.String.class,',')),new Object[]{v});
      $line=248;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q,","qv",$cast(java.lang.String.class,v)),new Object[]{v});
      $line=250;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qVAR","q2",$cast(java.lang.String.class,';')),new Object[]{VAR});
      $line=251;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qv","q2",$cast(java.lang.String.class,';')),new Object[]{VAR});
      $line=254;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("q1","qPROC",$cast(java.lang.String.class,PROC)),new Object[]{PROC});
      $line=255;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("q2","qPROC",$cast(java.lang.String.class,PROC)),new Object[]{PROC});
      $line=257;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROC","qPROCv",$cast(java.lang.String.class,v)),new Object[]{PROC,CORP});
      $line=259;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROCv","qPROC(",$cast(java.lang.String.class,'(')),new Object[]{par});
      $line=260;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROC(","qPROCp",$cast(java.lang.String.class,v)),new Object[]{});
      $line=261;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROC(","qPROC)",$cast(java.lang.String.class,')')),new Object[]{par});
      $line=262;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROCp","qPROC)",$cast(java.lang.String.class,')')),new Object[]{par});
      $line=263;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROCp","qPROC,",$cast(java.lang.String.class,',')),new Object[]{v});
      $line=264;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROC,","qPROCp",$cast(java.lang.String.class,v)),new Object[]{v});
      $line=266;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROC)","qPROCinstrs",$cast(java.lang.String.class,'{')),new Object[]{key});
      $line=268;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qCORP","q2",$cast(java.lang.String.class,CORP)),new Object[]{CORP});
      $line=272;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROCinstrs","qCORP",$cast(java.lang.String.class,'}')),new Object[]{key});
      $line=273;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROCinstrs","qCORP",$cast(java.lang.String.class,'}')),new Object[]{$opAdditY(key,instrEnd)});
      $line=276;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("q1","qBlock",$cast(java.lang.String.class,'{')),new Object[]{key});
      $line=277;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("q2","qBlock",$cast(java.lang.String.class,'{')),new Object[]{key});
      $line=278;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qBlock","qBlockEnd",$cast(java.lang.String.class,'}')),new Object[]{key});
      $line=279;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qBlock","qBlockEnd",$cast(java.lang.String.class,'}')),new Object[]{$opAdditY(key,instrEnd)});
      $line=284;
      for (Object $v3:GCollections.unmodifiableCollection(GCollections.asSet("qPROCinstrs","qBlock","qIfBlock","qElseBlock","qWhileBlock","qRepeatTimesBlock"))) {
        Object qBlock=$v3;
        $line=287;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qInstr;",$cast(java.lang.String.class,";")),new Object[]{instrEnd,instrBegin});
        $line=294;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qASSIGN",$cast(java.lang.String.class,v)),new Object[]{v});
        $line=295;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qASSIGN",$cast(java.lang.String.class,v)),new Object[]{instrBegin,v});
        $line=296;
        $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta("qASSIGN","q:=",$cast(java.lang.String.class,'=')),new Object[]{});
        $line=297;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q:=",qBlock,$cast(java.lang.String.class,"#")),new Object[]{v,instrEnd});
        $line=301;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qJump",$cast(java.lang.String.class,jump)),new Object[]{jump});
        $line=302;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qJump",$cast(java.lang.String.class,jump)),new Object[]{instrBegin,jump});
        $line=303;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJump","qJump(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=304;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJump(","qJumpP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=305;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJump(","qJumpP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=306;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJumpP",qBlock,$cast(java.lang.String.class,')')),new Object[]{jump,instrEnd});
        $line=310;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qDrop",$cast(java.lang.String.class,drop)),new Object[]{drop});
        $line=311;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qDrop",$cast(java.lang.String.class,drop)),new Object[]{instrBegin,drop});
        $line=312;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qDrop","qDrop(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=313;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qDrop(","qDropP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=314;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qDrop(","qDropP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=315;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qDropP",qBlock,$cast(java.lang.String.class,')')),new Object[]{drop,instrEnd});
        $line=319;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qGrab",$cast(java.lang.String.class,grab)),new Object[]{grab});
        $line=320;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qGrab",$cast(java.lang.String.class,grab)),new Object[]{instrBegin,grab});
        $line=321;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qGrab","qGrab(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=322;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qGrab(","qGrabP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=323;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qGrab(","qGrabP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=324;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qGrabP",qBlock,$cast(java.lang.String.class,')')),new Object[]{grab,instrEnd});
        $line=328;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qGet",$cast(java.lang.String.class,get)),new Object[]{get});
        $line=329;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qGet",$cast(java.lang.String.class,get)),new Object[]{instrBegin,get});
        $line=330;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qGet","qGet(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=331;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qGet(","qGetP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=332;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qGet(","qGetP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=333;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qGetP",qBlock,$cast(java.lang.String.class,')')),new Object[]{get,instrEnd});
        $line=337;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qFree",$cast(java.lang.String.class,free)),new Object[]{free});
        $line=338;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qFree",$cast(java.lang.String.class,free)),new Object[]{instrBegin,free});
        $line=339;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qFree","qFree(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=340;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qFree(","qFreeP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=341;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qFree(","qFreeP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=342;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qFreeP",qBlock,$cast(java.lang.String.class,')')),new Object[]{free,instrEnd});
        $line=346;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qPop",$cast(java.lang.String.class,pop)),new Object[]{pop});
        $line=347;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qPop",$cast(java.lang.String.class,pop)),new Object[]{instrBegin,pop});
        $line=348;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPop","qPop(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=349;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPop(","qPopP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=350;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPop(","qPopP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=351;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPopP",qBlock,$cast(java.lang.String.class,')')),new Object[]{pop,instrEnd});
        $line=355;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qVeer",$cast(java.lang.String.class,veer)),new Object[]{veer});
        $line=356;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qVeer",$cast(java.lang.String.class,veer)),new Object[]{instrBegin,veer});
        $line=357;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qVeer","qVeer(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=358;
        for (Object $v4:GCollections.unmodifiableCollection(GCollections.asSet(left,right,around))) {
          Object D=$v4;
          $line=359;
          $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qVeer(","qVeerP",$cast(java.lang.String.class,D)),new Object[]{par});
        }
        $line=361;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qVeerP",qBlock,$cast(java.lang.String.class,')')),new Object[]{veer,instrEnd});
        $line=365;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qLook",$cast(java.lang.String.class,look)),new Object[]{look});
        $line=366;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qLook",$cast(java.lang.String.class,look)),new Object[]{instrBegin,look});
        $line=367;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qLook","qLook(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=368;
        for (Object $v5:GCollections.unmodifiableCollection(GCollections.asSet(north,south,east,west))) {
          Object D=$v5;
          $line=369;
          $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qLook(","qLookP",$cast(java.lang.String.class,D)),new Object[]{par});
        }
        $line=371;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qLookP",qBlock,$cast(java.lang.String.class,')')),new Object[]{look,instrEnd});
        $line=385;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qJumpTo",$cast(java.lang.String.class,jumpTo)),new Object[]{jumpTo});
        $line=386;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qJumpTo",$cast(java.lang.String.class,jumpTo)),new Object[]{instrBegin,jumpTo});
        $line=387;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJumpTo","qJumpTo(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=388;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJumpTo(","qJumpToP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=389;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJumpTo(","qJumpToP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=390;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJumpToP","qJumpToP,",$cast(java.lang.String.class,',')),new Object[]{v});
        $line=391;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJumpToP,","qJumpToP2",$cast(java.lang.String.class,v)),new Object[]{v});
        $line=392;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJumpToP,","qJumpToP2",$cast(java.lang.String.class,'#')),new Object[]{v});
        $line=393;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJumpToP2",qBlock,$cast(java.lang.String.class,')')),new Object[]{jumpTo,instrEnd});
        $line=397;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qWalk",$cast(java.lang.String.class,walk)),new Object[]{walk});
        $line=398;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qWalk",$cast(java.lang.String.class,walk)),new Object[]{instrBegin,walk});
        $line=399;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalk","qWalk(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=400;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalk(","qWalkP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=401;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalk(","qWalkP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=402;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalkP",qBlock,$cast(java.lang.String.class,')')),new Object[]{walk,instrEnd});
        $line=404;
        for (Object $v6:GCollections.unmodifiableCollection(GCollections.asSet(front,right,left,back))) {
          Object d=$v6;
          $line=405;
          $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalk(","qWalkP1",$cast(java.lang.String.class,d)),new Object[]{par});
        }
        $line=408;
        for (Object $v7:GCollections.unmodifiableCollection(GCollections.asSet(north,south,east,west))) {
          Object o=$v7;
          $line=409;
          $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalk(","qWalkP1",$cast(java.lang.String.class,o)),new Object[]{par});
        }
        $line=411;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalkP1","qWalkP1,",$cast(java.lang.String.class,',')),new Object[]{v});
        $line=412;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalkP1,","qWalkP2",$cast(java.lang.String.class,v)),new Object[]{v});
        $line=413;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalkP1,","qWalkP2",$cast(java.lang.String.class,'#')),new Object[]{v});
        $line=414;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalkP2",qBlock,$cast(java.lang.String.class,')')),new Object[]{walk,instrEnd});
        $line=421;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qIf",$cast(java.lang.String.class,if_)),new Object[]{if_});
        $line=422;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qIf",$cast(java.lang.String.class,if_)),new Object[]{instrBegin,if_});
        $line=423;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qIf","qIfCondition",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=424;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qIfCondition","qIfCondition)",$cast(java.lang.String.class,')')),new Object[]{par});
        $line=425;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qIfCondition)","qIfBlock",$cast(java.lang.String.class,'{')),new Object[]{key});
        $line=426;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qIfBlock","qIfBlockEnd",$cast(java.lang.String.class,'}')),new Object[]{key});
        $line=427;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qIfBlock","qIfBlockEnd",$cast(java.lang.String.class,'}')),new Object[]{$opAdditY(key,instrEnd)});
        $line=428;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qIfBlockEnd",qBlock,$cast(java.lang.String.class,fi)),new Object[]{if_,instrEnd});
        $line=430;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qIfBlockEnd","qElse",$cast(java.lang.String.class,else_)),new Object[]{if_,else_});
        $line=431;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qElse","qElseBlock",$cast(java.lang.String.class,'{')),new Object[]{key});
        $line=432;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qElseBlock","qElseBlockEnd",$cast(java.lang.String.class,'}')),new Object[]{key});
        $line=433;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qElseBlock","qElseBlockEnd",$cast(java.lang.String.class,'}')),new Object[]{$opAdditY(key,instrEnd)});
        $line=434;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qElseBlockEnd",qBlock,$cast(java.lang.String.class,fi)),new Object[]{else_,instrEnd});
        $line=438;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qWhile",$cast(java.lang.String.class,while_)),new Object[]{while_});
        $line=439;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qWhile",$cast(java.lang.String.class,while_)),new Object[]{instrBegin,while_});
        $line=440;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWhile","qWhileCondition",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=441;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWhileCondition","qWhileCondition)",$cast(java.lang.String.class,')')),new Object[]{par});
        $line=442;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWhileCondition)","qDo",$cast(java.lang.String.class,do_)),new Object[]{while_,do_});
        $line=443;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qDo","qWhileBlock",$cast(java.lang.String.class,'{')),new Object[]{key});
        $line=444;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWhileBlock","qWhileBlockEnd",$cast(java.lang.String.class,'}')),new Object[]{key});
        $line=445;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWhileBlock","qWhileBlockEnd",$cast(java.lang.String.class,'}')),new Object[]{$opAdditY(key,instrEnd)});
        $line=446;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWhileBlockEnd",qBlock,$cast(java.lang.String.class,od)),new Object[]{do_,instrEnd});
        $line=450;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qRepeatTimes",$cast(java.lang.String.class,repeatTimes)),new Object[]{repeatTimes});
        $line=451;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qRepeatTimes",$cast(java.lang.String.class,repeatTimes)),new Object[]{instrBegin,repeatTimes});
        $line=452;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qRepeatTimes","qRepeatTimesN",$cast(java.lang.String.class,v)),new Object[]{v});
        $line=453;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qRepeatTimes","qRepeatTimesN",$cast(java.lang.String.class,'#')),new Object[]{v});
        $line=454;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qRepeatTimesN","qRepeatTimesBlock",$cast(java.lang.String.class,'{')),new Object[]{key});
        $line=455;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qRepeatTimesBlock","qRepeatTimesBlockEnd",$cast(java.lang.String.class,'}')),new Object[]{key});
        $line=456;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qRepeatTimesBlock","qRepeatTimesBlockEnd",$cast(java.lang.String.class,'}')),new Object[]{$opAdditY(key,instrEnd)});
        $line=457;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qRepeatTimesBlockEnd",qBlock,$cast(java.lang.String.class,per)),new Object[]{repeatTimes,instrEnd});
        $line=460;
        for (Object $v8:GCollections.unmodifiableCollection(GCollections.asSet("qIfCondition","qWhileCondition","qNotCondition"))) {
          Object qCondition=$v8;
          $line=463;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(qCondition,"qIsfacing",$cast(java.lang.String.class,isfacing)),new Object[]{par,isfacing});
          $line=464;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qIsfacing",$cast(java.lang.String.class,isfacing)),new Object[]{instrBegin,isfacing});
          $line=465;
          $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qIsfacing","qIsfacing(",$cast(java.lang.String.class,'(')),new Object[]{par});
          $line=466;
          for (Object $v9:GCollections.unmodifiableCollection(GCollections.asSet(north,south,east,west))) {
            Object D=$v9;
            $line=467;
            $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qIsfacing(","qIsfacingP",$cast(java.lang.String.class,D)),new Object[]{par});
          }
          $line=469;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qIsfacingP",qCondition,$cast(java.lang.String.class,')')),new Object[]{isfacing,par});
          $line=473;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(qCondition,"qIsValid",$cast(java.lang.String.class,isValid)),new Object[]{par,isValid});
          $line=474;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qIsValid",$cast(java.lang.String.class,isValid)),new Object[]{instrBegin,isValid});
          $line=475;
          $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qIsValid","qIsValid(",$cast(java.lang.String.class,'(')),new Object[]{par});
          $line=476;
          for (Object $v10:GCollections.unmodifiableCollection(GCollections.asSet(walk,jump,grab,pop,pick,free,drop))) {
            Object ins=$v10;
            $line=477;
            $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qIsValid(","qIsValidP1",$cast(java.lang.String.class,ins)),new Object[]{par});
          }
          $line=479;
          $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qIsValidP1","qIsValidP1,",$cast(java.lang.String.class,',')),new Object[]{v});
          $line=480;
          $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qIsValidP1,","qIsValidP2",$cast(java.lang.String.class,v)),new Object[]{v});
          $line=481;
          $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qIsValidP1,","qIsValidP2",$cast(java.lang.String.class,'#')),new Object[]{v});
          $line=482;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qIsValidP2",qCondition,$cast(java.lang.String.class,')')),new Object[]{isValid,par});
          $line=486;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(qCondition,"qCanWalk",$cast(java.lang.String.class,canWalk)),new Object[]{par,canWalk});
          $line=487;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qCanWalk",$cast(java.lang.String.class,canWalk)),new Object[]{instrBegin,canWalk});
          $line=488;
          $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qCanWalk","qCanWalk(",$cast(java.lang.String.class,'(')),new Object[]{par});
          $line=490;
          for (Object $v11:GCollections.unmodifiableCollection(GCollections.asSet(north,south,east,west))) {
            Object d=$v11;
            $line=491;
            $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qCanWalk(","qCanWalkP1",$cast(java.lang.String.class,d)),new Object[]{par});
          }
          $line=494;
          for (Object $v12:GCollections.unmodifiableCollection(GCollections.asSet(front,right,left,back))) {
            Object o=$v12;
            $line=495;
            $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qCanWalk(","qCanWalkP1",$cast(java.lang.String.class,o)),new Object[]{par});
          }
          $line=497;
          $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qCanWalkP1","qCanWalkP1,",$cast(java.lang.String.class,',')),new Object[]{v});
          $line=498;
          $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qCanWalkP1,","qCanWalkP2",$cast(java.lang.String.class,v)),new Object[]{v});
          $line=499;
          $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qCanWalkP1,","qCanWalkP2",$cast(java.lang.String.class,'#')),new Object[]{v});
          $line=500;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qCanWalkP2",qCondition,$cast(java.lang.String.class,')')),new Object[]{canWalk,par});
          $line=504;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(qCondition,"qNot",$cast(java.lang.String.class,not_)),new Object[]{par,not_});
          $line=505;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qNot",$cast(java.lang.String.class,not_)),new Object[]{instrBegin,not_});
          $line=506;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qNot","qNotCondition",$cast(java.lang.String.class,'(')),new Object[]{not_,notCond});
          $line=507;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qNotCondition",qCondition,$cast(java.lang.String.class,')')),new Object[]{notCond,par});
        }
        $line=514;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qProcCall",$cast(java.lang.String.class,v)),new Object[]{procDef});
        $line=515;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qProcCall",$cast(java.lang.String.class,v)),new Object[]{instrBegin,procDef});
        $line=516;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qProcCall","qProcCall(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=517;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qProcCall(","qProcCallP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=518;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qProcCall(","qProcCallP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=519;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qProcCallP","qProcCallP,",$cast(java.lang.String.class,',')),new Object[]{par});
        $line=520;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qProcCallP,","qProcCallP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=521;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qProcCallP,","qProcCallP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=522;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qProcCallP",qBlock,$cast(java.lang.String.class,')')),new Object[]{procDef,instrEnd});
        $line=523;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qProcCall(",qBlock,$cast(java.lang.String.class,')')),new Object[]{procDef,instrEnd});
      }
      $line=529;
      for (Object $v13:GCollections.unmodifiableCollection(Q)) {
        Object q=$v13;
        $line=530;
        for (Object $v14:GCollections.unmodifiableCollection(SkipChars)) {
          Object s=$v14;
          $line=531;
          $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(q,q,$cast(java.lang.String.class,$opAdditY("",s))),new Object[]{});
        }
      }
      $line=536;
      $result=M;
      if (true) break $try;
      $line=538;
      $rethrow(new RuntimeException("The function \"createParser(A:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ParserRobot202220.class,"createParser",$line);
    }
    return $cast(IPushdownAutomaton.class,$result);
  }
}
