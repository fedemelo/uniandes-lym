// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/ParserRobot202220.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class ParserRobot202220 {
  public static Object toSet(Object C) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v1=$newSet();
      $v2:for (Object x:GCollections.unmodifiableCollection(C)) {
        $v1.add(x);
      }
      $result=$v1;
      if (true) break $try;
      $line=11;
      $rethrow(new RuntimeException("The function \"toSet(C:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ParserRobot202220.class,"toSet",$line);
    }
    return $result;
  }
  public static IPushdownAutomaton createParser(Object A) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=16;
      String PROG=null;
      PROG=$defaultValue(String.class);
      $line=17;
      String GORP=null;
      GORP=$defaultValue(String.class);
      $line=18;
      String VAR=null;
      VAR=$defaultValue(String.class);
      $line=19;
      String PROC=null;
      PROC=$defaultValue(String.class);
      $line=20;
      String CORP=null;
      CORP=$defaultValue(String.class);
      $line=21;
      String if_=null;
      if_=$defaultValue(String.class);
      $line=22;
      String else_=null;
      else_=$defaultValue(String.class);
      $line=23;
      String fi=null;
      fi=$defaultValue(String.class);
      $line=24;
      String while_=null;
      while_=$defaultValue(String.class);
      $line=25;
      String do_=null;
      do_=$defaultValue(String.class);
      $line=26;
      String od=null;
      od=$defaultValue(String.class);
      $line=27;
      String repeatTimes=null;
      repeatTimes=$defaultValue(String.class);
      $line=28;
      String per=null;
      per=$defaultValue(String.class);
      $line=29;
      String isfacing=null;
      isfacing=$defaultValue(String.class);
      $line=30;
      String isValid=null;
      isValid=$defaultValue(String.class);
      $line=31;
      String canWalk=null;
      canWalk=$defaultValue(String.class);
      $line=32;
      String not_=null;
      not_=$defaultValue(String.class);
      $line=33;
      String walk=null;
      walk=$defaultValue(String.class);
      $line=34;
      String jump=null;
      jump=$defaultValue(String.class);
      $line=35;
      String jumpTo=null;
      jumpTo=$defaultValue(String.class);
      $line=36;
      String veer=null;
      veer=$defaultValue(String.class);
      $line=37;
      String look=null;
      look=$defaultValue(String.class);
      $line=38;
      String drop=null;
      drop=$defaultValue(String.class);
      $line=39;
      String grab=null;
      grab=$defaultValue(String.class);
      $line=40;
      String get=null;
      get=$defaultValue(String.class);
      $line=41;
      String free=null;
      free=$defaultValue(String.class);
      $line=42;
      String pop=null;
      pop=$defaultValue(String.class);
      $line=43;
      String pick=null;
      pick=$defaultValue(String.class);
      $line=44;
      String left=null;
      left=$defaultValue(String.class);
      $line=45;
      String right=null;
      right=$defaultValue(String.class);
      $line=46;
      String around=null;
      around=$defaultValue(String.class);
      $line=47;
      String north=null;
      north=$defaultValue(String.class);
      $line=48;
      String south=null;
      south=$defaultValue(String.class);
      $line=49;
      String east=null;
      east=$defaultValue(String.class);
      $line=50;
      String west=null;
      west=$defaultValue(String.class);
      $line=51;
      String front=null;
      front=$defaultValue(String.class);
      $line=52;
      String back=null;
      back=$defaultValue(String.class);
      $line=54;
      PROG=$cast(String.class,$fix("D"));
      $line=55;
      GORP=$cast(String.class,$fix("G"));
      $line=56;
      VAR=$cast(String.class,$fix("A"));
      $line=57;
      PROC=$cast(String.class,$fix("P"));
      $line=58;
      CORP=$cast(String.class,$fix("C"));
      $line=59;
      if_=$cast(String.class,$fix("i"));
      $line=60;
      else_=$cast(String.class,$fix("s"));
      $line=61;
      fi=$cast(String.class,$fix("f"));
      $line=62;
      while_=$cast(String.class,$fix("w"));
      $line=63;
      do_=$cast(String.class,$fix("x"));
      $line=64;
      od=$cast(String.class,$fix("y"));
      $line=65;
      repeatTimes=$cast(String.class,$fix("r"));
      $line=66;
      per=$cast(String.class,$fix("p"));
      $line=67;
      isfacing=$cast(String.class,$fix("b"));
      $line=68;
      isValid=$cast(String.class,$fix("h"));
      $line=69;
      canWalk=$cast(String.class,$fix("c"));
      $line=70;
      not_=$cast(String.class,$fix("n"));
      $line=71;
      walk=$cast(String.class,$fix("k"));
      $line=72;
      jump=$cast(String.class,$fix("j"));
      $line=73;
      jumpTo=$cast(String.class,$fix("t"));
      $line=74;
      veer=$cast(String.class,$fix("q"));
      $line=75;
      look=$cast(String.class,$fix("l"));
      $line=76;
      drop=$cast(String.class,$fix("d"));
      $line=77;
      grab=$cast(String.class,$fix("a"));
      $line=78;
      get=$cast(String.class,$fix("g"));
      $line=79;
      free=$cast(String.class,$fix("e"));
      $line=80;
      pop=$cast(String.class,$fix("o"));
      $line=81;
      pick=$cast(String.class,$fix("m"));
      $line=82;
      left=$cast(String.class,$fix("L"));
      $line=83;
      right=$cast(String.class,$fix("R"));
      $line=84;
      around=$cast(String.class,$fix("O"));
      $line=85;
      north=$cast(String.class,$fix("N"));
      $line=86;
      south=$cast(String.class,$fix("S"));
      $line=87;
      east=$cast(String.class,$fix("E"));
      $line=88;
      west=$cast(String.class,$fix("W"));
      $line=89;
      front=$cast(String.class,$fix("F"));
      $line=90;
      back=$cast(String.class,$fix("B"));
      $line=94;
      String par=null;
      par=$defaultValue(String.class);
      $line=95;
      par=$cast(String.class,$fix("("));
      $line=96;
      String key=null;
      key=$defaultValue(String.class);
      $line=97;
      key=$cast(String.class,$fix("{"));
      $line=98;
      String num=null;
      num=$defaultValue(String.class);
      $line=99;
      num=$cast(String.class,$fix("#"));
      $line=100;
      String v=null;
      v=$defaultValue(String.class);
      $line=101;
      v=$cast(String.class,$fix("v"));
      $line=103;
      String instrEnd=null;
      instrEnd=$defaultValue(String.class);
      $line=104;
      instrEnd=$cast(String.class,$fix("U"));
      $line=105;
      String instrBegin=null;
      instrBegin=$defaultValue(String.class);
      $line=106;
      instrBegin=$cast(String.class,$fix("J"));
      $line=107;
      String procDef=null;
      procDef=$defaultValue(String.class);
      $line=108;
      procDef=$cast(String.class,$fix("H"));
      $line=112;
      Object Q=$fix(GCollections.asSet("qPROG","q,","qCORP","q2","q1","q;","qPROC","qPROC(","qPROC)","qPROC,","qPROCinstrs","qPROCp","qPROCv","qVAR","qv","qCORP","qBlock","qBlockEnd","qASSIGN","q:=","qInstr;","qLookP","qDropP","qJump(","qJump","qPopP","qGrab(","qVeer(","qFree(","qDrop)","qPop","qWalk","qJump)","qFree)","qWalkP","qLook","qVeer)","qGet)","qPop(","qFree","qDrop(","qPickP","qJumpP","qGrab","qWalk(","qLook(","qDrop","qGet","qGrabP","qWalk)","qGet(","qPick)","qLook)","qGrab)","qVeer","qFreeP","qVeerP","qPop)","qGetP","qPick(","qPick","qJumpTo","qJumpTo(","qJumpToP","qJumpToP,","qJumpToP2","qWalkP1","qWalkP1,","qWalkP2","qProcCall","qProcCall(","qProcCallP","qProcCallP,"));
      $line=184;
      Object \u03A3=$fix($opUnionY(ParserRobot202220.toSet(A),GCollections.asSet(' ','\n','\t')));
      $line=186;
      Object \u0393=$fix($opUnionY($opUnionY($opIntvlY('A','Z'),$opIntvlY('a','z')),GCollections.asSet('(','{',',')));
      $line=188;
      Object q_0=$fix("qPROG");
      $line=190;
      Object F=$fix(GCollections.asSet("qPROG"));
      $line=192;
      Object M=$fix($invokeConstructor(GPushdownAutomaton.class,new Object[]{Q,\u03A3,\u0393,q_0,F}));
      $line=194;
      Object SkipChars=$fix(GCollections.asSet(' ','\n','\t'));
      $line=200;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROG","q1",$cast(java.lang.String.class,PROG)),new Object[]{PROG});
      $line=202;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qBlockEnd","qPROG",$cast(java.lang.String.class,GORP)),new Object[]{PROG});
      $line=205;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("q1","qVAR",$cast(java.lang.String.class,VAR)),new Object[]{VAR});
      $line=207;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta("qVAR","qv",$cast(java.lang.String.class,v)),new Object[]{});
      $line=208;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qv","q,",$cast(java.lang.String.class,',')),new Object[]{v});
      $line=209;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q,","qv",$cast(java.lang.String.class,v)),new Object[]{v});
      $line=211;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qVAR","q2",$cast(java.lang.String.class,';')),new Object[]{VAR});
      $line=212;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qv","q2",$cast(java.lang.String.class,';')),new Object[]{VAR});
      $line=215;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("q1","qPROC",$cast(java.lang.String.class,PROC)),new Object[]{PROC});
      $line=216;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("q2","qPROC",$cast(java.lang.String.class,PROC)),new Object[]{PROC});
      $line=218;
      $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROC","qPROCv",$cast(java.lang.String.class,v)),new Object[]{PROC,CORP});
      $line=220;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROCv","qPROC(",$cast(java.lang.String.class,'(')),new Object[]{par});
      $line=221;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROC(","qPROCp",$cast(java.lang.String.class,v)),new Object[]{});
      $line=222;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROC(","qPROC)",$cast(java.lang.String.class,')')),new Object[]{par});
      $line=223;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROCp","qPROC)",$cast(java.lang.String.class,')')),new Object[]{par});
      $line=224;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROCp","qPROC,",$cast(java.lang.String.class,',')),new Object[]{v});
      $line=225;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROC,","qPROCp",$cast(java.lang.String.class,v)),new Object[]{v});
      $line=227;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROC)","qPROCinstrs",$cast(java.lang.String.class,'{')),new Object[]{key});
      $line=229;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qCORP","q2",$cast(java.lang.String.class,CORP)),new Object[]{CORP});
      $line=233;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROCinstrs","qCORP",$cast(java.lang.String.class,'}')),new Object[]{key});
      $line=234;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPROCinstrs","qCORP",$cast(java.lang.String.class,'}')),new Object[]{$opAdditY(key,instrEnd)});
      $line=237;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("q1","qBlock",$cast(java.lang.String.class,'{')),new Object[]{key});
      $line=238;
      $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("q2","qBlock",$cast(java.lang.String.class,'{')),new Object[]{key});
      $line=239;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qBlock","qBlockEnd",$cast(java.lang.String.class,'}')),new Object[]{key});
      $line=240;
      $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qBlock","qBlockEnd",$cast(java.lang.String.class,'}')),new Object[]{$opAdditY(key,instrEnd)});
      $line=243;
      for (Object $v3:GCollections.unmodifiableCollection(GCollections.asSet("qPROCinstrs","qBlock"))) {
        Object qBlock=$v3;
        $line=246;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qInstr;",$cast(java.lang.String.class,";")),new Object[]{instrEnd,instrBegin});
        $line=253;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qASSIGN",$cast(java.lang.String.class,v)),new Object[]{v});
        $line=254;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qASSIGN",$cast(java.lang.String.class,v)),new Object[]{instrBegin,v});
        $line=255;
        $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta("qASSIGN","q:=",$cast(java.lang.String.class,'=')),new Object[]{});
        $line=256;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("q:=",qBlock,$cast(java.lang.String.class,"#")),new Object[]{v,instrEnd});
        $line=260;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qJump",$cast(java.lang.String.class,jump)),new Object[]{jump});
        $line=261;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qJump",$cast(java.lang.String.class,jump)),new Object[]{instrBegin,jump});
        $line=262;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJump","qJump(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=263;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJump(","qJumpP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=264;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJump(","qJumpP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=265;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJumpP",qBlock,$cast(java.lang.String.class,')')),new Object[]{jump,instrEnd});
        $line=269;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qDrop",$cast(java.lang.String.class,drop)),new Object[]{drop});
        $line=270;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qDrop",$cast(java.lang.String.class,drop)),new Object[]{instrBegin,drop});
        $line=271;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qDrop","qDrop(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=272;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qDrop(","qDropP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=273;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qDrop(","qDropP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=274;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qDropP",qBlock,$cast(java.lang.String.class,')')),new Object[]{drop,instrEnd});
        $line=278;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qGrab",$cast(java.lang.String.class,grab)),new Object[]{grab});
        $line=279;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qGrab",$cast(java.lang.String.class,grab)),new Object[]{instrBegin,grab});
        $line=280;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qGrab","qGrab(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=281;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qGrab(","qGrabP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=282;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qGrab(","qGrabP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=283;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qGrabP",qBlock,$cast(java.lang.String.class,')')),new Object[]{grab,instrEnd});
        $line=287;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qGet",$cast(java.lang.String.class,get)),new Object[]{get});
        $line=288;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qGet",$cast(java.lang.String.class,get)),new Object[]{instrBegin,get});
        $line=289;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qGet","qGet(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=290;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qGet(","qGetP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=291;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qGet(","qGetP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=292;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qGetP",qBlock,$cast(java.lang.String.class,')')),new Object[]{get,instrEnd});
        $line=296;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qFree",$cast(java.lang.String.class,free)),new Object[]{free});
        $line=297;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qFree",$cast(java.lang.String.class,free)),new Object[]{instrBegin,free});
        $line=298;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qFree","qFree(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=299;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qFree(","qFreeP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=300;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qFree(","qFreeP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=301;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qFreeP",qBlock,$cast(java.lang.String.class,')')),new Object[]{free,instrEnd});
        $line=305;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qPop",$cast(java.lang.String.class,pop)),new Object[]{pop});
        $line=306;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qPop",$cast(java.lang.String.class,pop)),new Object[]{instrBegin,pop});
        $line=307;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPop","qPop(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=308;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPop(","qPopP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=309;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPop(","qPopP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=310;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qPopP",qBlock,$cast(java.lang.String.class,')')),new Object[]{pop,instrEnd});
        $line=314;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qVeer",$cast(java.lang.String.class,veer)),new Object[]{veer});
        $line=315;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qVeer",$cast(java.lang.String.class,veer)),new Object[]{instrBegin,veer});
        $line=316;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qVeer","qVeer(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=317;
        for (Object $v4:GCollections.unmodifiableCollection(GCollections.asSet(left,right,around))) {
          Object D=$v4;
          $line=318;
          $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qVeer(","qVeerP",$cast(java.lang.String.class,D)),new Object[]{par});
        }
        $line=320;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qVeerP",qBlock,$cast(java.lang.String.class,')')),new Object[]{veer,instrEnd});
        $line=324;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qLook",$cast(java.lang.String.class,look)),new Object[]{look});
        $line=325;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qLook",$cast(java.lang.String.class,look)),new Object[]{instrBegin,look});
        $line=326;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qLook","qLook(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=327;
        for (Object $v5:GCollections.unmodifiableCollection(GCollections.asSet(north,south,east,west))) {
          Object D=$v5;
          $line=328;
          $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qLook(","qLookP",$cast(java.lang.String.class,D)),new Object[]{par});
        }
        $line=330;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qLookP",qBlock,$cast(java.lang.String.class,')')),new Object[]{look,instrEnd});
        $line=343;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qJumpTo",$cast(java.lang.String.class,jumpTo)),new Object[]{jumpTo});
        $line=344;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qJumpTo",$cast(java.lang.String.class,jumpTo)),new Object[]{instrBegin,jumpTo});
        $line=345;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJumpTo","qJumpTo(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=346;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJumpTo(","qJumpToP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=347;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJumpTo(","qJumpToP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=348;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJumpToP","qJumpToP,",$cast(java.lang.String.class,',')),new Object[]{v});
        $line=349;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJumpToP,","qJumpToP2",$cast(java.lang.String.class,v)),new Object[]{v});
        $line=350;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJumpToP,","qJumpToP2",$cast(java.lang.String.class,'#')),new Object[]{v});
        $line=351;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qJumpToP2",qBlock,$cast(java.lang.String.class,')')),new Object[]{jumpTo,instrEnd});
        $line=355;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qWalk",$cast(java.lang.String.class,walk)),new Object[]{walk});
        $line=356;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qWalk",$cast(java.lang.String.class,walk)),new Object[]{instrBegin,walk});
        $line=357;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalk","qWalk(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=358;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalk(","qWalkP",$cast(java.lang.String.class,v)),new Object[]{par});
        $line=359;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalk(","qWalkP",$cast(java.lang.String.class,'#')),new Object[]{par});
        $line=360;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalkP",qBlock,$cast(java.lang.String.class,')')),new Object[]{walk,instrEnd});
        $line=362;
        for (Object $v6:GCollections.unmodifiableCollection(GCollections.asSet(front,right,left,back))) {
          Object d=$v6;
          $line=363;
          $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalk(","qWalkP1",$cast(java.lang.String.class,d)),new Object[]{par});
        }
        $line=366;
        for (Object $v7:GCollections.unmodifiableCollection(GCollections.asSet(north,south,east,west))) {
          Object o=$v7;
          $line=367;
          $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalk(","qWalkP1",$cast(java.lang.String.class,o)),new Object[]{par});
        }
        $line=369;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalkP1","qWalkP1,",$cast(java.lang.String.class,',')),new Object[]{v});
        $line=370;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalkP1,","qWalkP2",$cast(java.lang.String.class,v)),new Object[]{v});
        $line=371;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalkP1,","qWalkP2",$cast(java.lang.String.class,'#')),new Object[]{v});
        $line=372;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qWalkP2",qBlock,$cast(java.lang.String.class,')')),new Object[]{walk,instrEnd});
        $line=388;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(qBlock,"qProcCall",$cast(java.lang.String.class,v)),new Object[]{procDef});
        $line=389;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qInstr;","qProcCall",$cast(java.lang.String.class,v)),new Object[]{instrBegin,procDef});
        $line=390;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qProcCall","qProcCall(",$cast(java.lang.String.class,'(')),new Object[]{par});
        $line=391;
        ((gold.structures.automaton.GPushdownAutomaton)M).delta("qProcCall(","qProcCallP",$cast(java.lang.String.class,v));
        $line=392;
        ((gold.structures.automaton.GPushdownAutomaton)M).delta("qProcCall(","qProcCallP",$cast(java.lang.String.class,'#'));
        $line=393;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta("qProcCallP","qProcCallP,",$cast(java.lang.String.class,',')),new Object[]{","});
        $line=394;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qProcCallP,","qProcCallP",$cast(java.lang.String.class,v)),new Object[]{","});
        $line=395;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qProcCallP,","qProcCallP",$cast(java.lang.String.class,'#')),new Object[]{","});
        $line=396;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qProcCallP",qBlock,$cast(java.lang.String.class,')')),new Object[]{procDef,instrEnd});
        $line=397;
        $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta("qProcCall(",qBlock,$cast(java.lang.String.class,')')),new Object[]{procDef,instrEnd});
      }
      $line=403;
      for (Object $v8:GCollections.unmodifiableCollection(Q)) {
        Object q=$v8;
        $line=404;
        for (Object $v9:GCollections.unmodifiableCollection(SkipChars)) {
          Object s=$v9;
          $line=405;
          $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(q,q,$cast(java.lang.String.class,$opAdditY("",s))),new Object[]{});
        }
      }
      $line=410;
      $result=M;
      if (true) break $try;
      $line=412;
      $rethrow(new RuntimeException("The function \"createParser(A:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ParserRobot202220.class,"createParser",$line);
    }
    return $cast(IPushdownAutomaton.class,$result);
  }
}
