// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/Lexer202220.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class Lexer202220 {
  public static String currentString=null;
  static {
    int $line=0;
    $line=11;
    $try:try {
      currentString=$defaultValue(String.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static GArrayList images=null;
  static {
    int $line=0;
    $line=12;
    $try:try {
      images=$invokeConstructor(GArrayList.class,new Object[]{});
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static ISet allSymbols=null;
  static {
    int $line=0;
    $line=14;
    $try:try {
      allSymbols=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static ISet keyWords=null;
  static {
    int $line=0;
    $line=15;
    $try:try {
      keyWords=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static ISet skipChars=null;
  static {
    int $line=0;
    $line=16;
    $try:try {
      skipChars=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static ISet preKW=null;
  static {
    int $line=0;
    $line=18;
    $try:try {
      preKW=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static ISet preOps=null;
  static {
    int $line=0;
    $line=19;
    $try:try {
      preOps=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static ISet StartOps=null;
  static {
    int $line=0;
    $line=21;
    $try:try {
      StartOps=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static ISet Symbols1=null;
  static {
    int $line=0;
    $line=22;
    $try:try {
      Symbols1=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static ISet CharsSymbols1=null;
  static {
    int $line=0;
    $line=24;
    $try:try {
      CharsSymbols1=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static ISet alphaUpper=null;
  static {
    int $line=0;
    $line=26;
    $try:try {
      alphaUpper=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static ISet alphaLower=null;
  static {
    int $line=0;
    $line=27;
    $try:try {
      alphaLower=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static ISet digits=null;
  static {
    int $line=0;
    $line=28;
    $try:try {
      digits=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static ISet alphaNum=null;
  static {
    int $line=0;
    $line=30;
    $try:try {
      alphaNum=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static ISet Out=null;
  static {
    int $line=0;
    $line=32;
    $try:try {
      Out=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static Boolean diffIdents=null;
  static {
    int $line=0;
    $line=33;
    $try:try {
      diffIdents=$defaultValue(Boolean.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static ISet Ids=null;
  static {
    int $line=0;
    $line=35;
    $try:try {
      Ids=$defaultValue(ISet.class);
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static GHashTableMap translation=null;
  static {
    int $line=0;
    $line=36;
    $try:try {
      translation=$invokeConstructor(GHashTableMap.class,new Object[]{});
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,null,$line);
    }
  }
  public static Object chars(Object string) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v1=$newSet();
      int $v3=$int(0);
      int $v4=$int($invokeMethod("length",string,new Object[]{}))-1;
      $v2:for (int i=$v3; i<=$v4; i++) {
        $v1.add($invokeMethod("charAt",string,new Object[]{i}));
      }
      $result=$v1;
      if (true) break $try;
      $line=39;
      $rethrow(new RuntimeException("The function \"chars(string:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,"chars",$line);
    }
    return $result;
  }
  public static Object charsStrings(Object strings) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v5=$newSet(GCollections.emptySet());
      $v6:for (Object s:GCollections.unmodifiableCollection(strings)) {
        $v5.union(GCollections.unmodifiableSet(((java.lang.Iterable)(Lexer202220.chars(s)))));
      }
      $result=$v5;
      if (true) break $try;
      $line=41;
      $rethrow(new RuntimeException("The function \"charsStrings(strings:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,"charsStrings",$line);
    }
    return $result;
  }
  public static Object elements(Object array) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v7=$newSet();
      int $v9=$int(0);
      int $v10=$int($opAbsolY(array))-1;
      $v8:for (int i=$v9; i<=$v10; i++) {
        $v7.add($getArrayValue(array,new Object[]{i}));
      }
      $result=$v7;
      if (true) break $try;
      $line=43;
      $rethrow(new RuntimeException("The function \"elements(array:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,"elements",$line);
    }
    return $result;
  }
  public static Object prefixes(Object string) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v11=$newSet();
      int $v13=$int(1);
      int $v14=$int($invokeMethod("length",string,new Object[]{}));
      $v12:for (int i=$v13; i<=$v14; i++) {
        $v11.add($invokeMethod("substring",string,new Object[]{0,i}));
      }
      $result=$v11;
      if (true) break $try;
      $line=45;
      $rethrow(new RuntimeException("The function \"prefixes(string:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,"prefixes",$line);
    }
    return $result;
  }
  public static Object splits(Object string) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v15=$newSet();
      int $v17=$int(1);
      int $v18=$int($opSubtrY($invokeMethod("length",string,new Object[]{}),1));
      $v16:for (int i=$v17; i<=$v18; i++) {
        $v15.add(GCollections.asList($invokeMethod("substring",string,new Object[]{0,i}),$invokeMethod("substring",string,new Object[]{i,$invokeMethod("length",string,new Object[]{})})));
      }
      $result=$v15;
      if (true) break $try;
      $line=46;
      $rethrow(new RuntimeException("The function \"splits(string:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,"splits",$line);
    }
    return $result;
  }
  public static Object allPrefixes(Object strings) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v19=$newSet(GCollections.emptySet());
      $v20:for (Object s:GCollections.unmodifiableCollection(strings)) {
        $v19.union(GCollections.unmodifiableSet(((java.lang.Iterable)(Lexer202220.prefixes(s)))));
      }
      $result=$v19;
      if (true) break $try;
      $line=48;
      $rethrow(new RuntimeException("The function \"allPrefixes(strings:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,"allPrefixes",$line);
    }
    return $result;
  }
  public static Object translationGet(Object q) {
    int $line=0;
    Object $result=null;
    $try:try {
      $result=(($bool((($opEqualY($opAbsolY(q),1)&&$opMembrY(q,Symbols1))&&!$opEqualY(q,'\n'))))?(q):(((gold.structures.map.GHashTableMap)translation).get(q)));
      if (true) break $try;
      $line=50;
      $rethrow(new RuntimeException("The function \"translationGet(q:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,"translationGet",$line);
    }
    return $result;
  }
  public static Object runLexer(Object M, Object input) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=53;
      currentString=$cast(String.class,$fix(""));
      $line=54;
      images=$cast(GArrayList.class,$fix($invokeConstructor(GArrayList.class,new Object[]{})));
      $line=55;
      Object result=$fix($invokeMethod("acceptsString",M,new Object[]{input}));
      $line=56;
      $result=GCollections.asList(result,images);
      if (true) break $try;
      $line=57;
      $rethrow(new RuntimeException("The function \"runLexer(M:Object,input:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,"runLexer",$line);
    }
    return $result;
  }
  public static Object problems(String q) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=61;
      if ($opMembrY(q,allSymbols)) {
        $line=61;
        $result=false;
        if (true) break $try;
      }
      else {
        $line=62;
        if ($opLessqY($opAbsolY(q),1)) {
          $line=62;
          $result=true;
          if (true) break $try;
        }
        else {
          $line=64;
          for (Object $v21:GCollections.unmodifiableCollection(Lexer202220.splits(q))) {
            java.util.Iterator $v22=GCollections.unmodifiableCollection($v21).iterator();
            Object s=$v22.next();
            Object t=$v22.next();
            $line=65;
            if ((!$bool(Lexer202220.problems($cast(java.lang.String.class,s)))&&!$bool(Lexer202220.problems($cast(java.lang.String.class,t))))) {
              $line=65;
              $result=false;
              if (true) break $try;
            }
          }
          $line=67;
          $result=true;
          if (true) break $try;
        }
      }
      $line=70;
      $rethrow(new RuntimeException("The function \"problems(q:String)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,"problems",$line);
    }
    return $result;
  }
  public static Object translationPreOps(Object state) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=74;
      Object x=null;
      Object y=null;
      $line=75;
      String q=null;
      q=$defaultValue(String.class);
      $line=76;
      q=$cast(String.class,$fix(state));
      $line=77;
      Object n=$fix(((java.lang.String)q).length());
      $line=78;
      if ($opEqualY(n,0)) {
        $line=78;
        $result="";
        if (true) break $try;
      }
      else {
        $line=79;
        if ($opMembrY(q,allSymbols)) {
          $line=80;
          ((gold.structures.list.GArrayList)images).add(q);
          $line=81;
          $result=Lexer202220.translationGet(q);
          if (true) break $try;
        }
        else {
          $line=82;
          if ($opEqualY(n,1)) {
            $line=82;
            $result="";
            if (true) break $try;
          }
          else {
            $line=84;
            for (Object $v23:GCollections.unmodifiableCollection(Lexer202220.splits(q))) {
              java.util.Iterator $v24=GCollections.unmodifiableCollection($v23).iterator();
              Object s=$v24.next();
              Object t=$v24.next();
              $line=85;
              x=$fix(Lexer202220.translationPreOps(s));
              $line=86;
              y=$fix(Lexer202220.translationPreOps(t));
              $line=87;
              if ((!$opEqualY(x,"")&&!$opEqualY(y,""))) {
                $line=88;
                $result=$opAdditY(x,y);
                if (true) break $try;
              }
            }
            $line=91;
            $result="";
            if (true) break $try;
          }
        }
      }
      $line=95;
      $rethrow(new RuntimeException("The function \"translationPreOps(state:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,"translationPreOps",$line);
    }
    return $result;
  }
  public static ITransducer createLexer() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=99;
      Lexer202220.initialize();
      $line=101;
      preOps=$cast(ISet.class,$fix(Lexer202220.allPrefixes(allSymbols)));
      $line=102;
      preKW=$cast(ISet.class,$fix(Lexer202220.allPrefixes(keyWords)));
      $line=103;
      gold.structures.set.ISet $v25=$newSet(GCollections.emptySet());
      $v26:for (Object x:GCollections.unmodifiableCollection(allSymbols)) {
        $v25.union(GCollections.unmodifiableSet(((java.lang.Iterable)(GCollections.asSet($invokeMethod("charAt",x,new Object[]{0}))))));
      }
      StartOps=$cast(ISet.class,$fix($v25));
      $line=104;
      gold.structures.set.ISet $v27=$newSet(GCollections.emptySet());
      $v28:for (Object x:GCollections.unmodifiableCollection(StartOps)) {
        $v27.union(GCollections.unmodifiableSet(((java.lang.Iterable)(GCollections.asSet($opAdditY("",x))))));
      }
      Symbols1=$cast(ISet.class,$fix($opInterY($v27,allSymbols)));
      $line=105;
      gold.structures.set.ISet $v29=$newSet(GCollections.emptySet());
      $v30:for (Object x:GCollections.unmodifiableCollection(Symbols1)) {
        $v29.union(GCollections.unmodifiableSet(((java.lang.Iterable)(GCollections.asSet($invokeMethod("charAt",x,new Object[]{0}))))));
      }
      CharsSymbols1=$cast(ISet.class,$fix($v29));
      $line=106;
      gold.structures.set.ISet $v31=$newSet(GCollections.emptySet());
      $v32:for (Object x:GCollections.unmodifiableCollection(((gold.structures.map.GHashTableMap)translation).values())) {
        $v31.union(GCollections.unmodifiableSet(((java.lang.Iterable)(GCollections.asSet(x)))));
      }
      Out=$cast(ISet.class,$fix($opUnionY(CharsSymbols1,$v31)));
      $line=108;
      System.out.println($message(new Object[]{Out}));
      $line=109;
      Ids=$cast(ISet.class,$fix(GCollections.asSet("IdU","IdL")));
      $line=111;
      Object Q=$fix($opUnionY($opUnionY(GCollections.asSet("INIT","IdU","Num","Err","IdL"),preKW),preOps));
      $line=113;
      System.out.println($message(new Object[]{Q}));
      $line=115;
      Object \u03A3=$fix($opUnionY($opUnionY($opUnionY(alphaNum,Lexer202220.charsStrings(allSymbols)),skipChars),GCollections.asSet(':','-')));
      $line=118;
      Object q_0=$fix("INIT");
      $line=119;
      Object F=$fix(GCollections.asSet("INIT"));
      $line=120;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,Out,q_0,F,new GMethod(Lexer202220.class,"\u03B4"),new GMethod(Lexer202220.class,"g"),new GMethod(Lexer202220.class,"h")});
      if (true) break $try;
      $line=121;
      $rethrow(new RuntimeException("The function \"createLexer()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,"createLexer",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object \u03B4(Object state, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=126;
      String q=null;
      q=$defaultValue(String.class);
      $line=127;
      q=$cast(String.class,$fix(state));
      $line=129;
      if ($opEqualY(q,"Err")) {
        $line=129;
        $result="Err";
        if (true) break $try;
      }
      else {
        $line=130;
        if ($opMembrY(q,preOps)) {
          $line=131;
          if ($opMembrY($opAdditY(q,\u03C3),preOps)) {
            $line=131;
            $result=$opAdditY(q,\u03C3);
            if (true) break $try;
          }
          else {
            $line=132;
            if ($bool(Lexer202220.problems($cast(java.lang.String.class,q)))) {
              $line=132;
              $result="Err";
              if (true) break $try;
            }
            else {
              $line=133;
              if ($opMembrY(\u03C3,skipChars)) {
                $line=133;
                $result="INIT";
                if (true) break $try;
              }
              else {
                $line=134;
                if ($opMembrY(\u03C3,$opIntvlY('0','9'))) {
                  $line=134;
                  $result="Num";
                  if (true) break $try;
                }
                else {
                  $line=135;
                  if ($opMembrY($opAdditY("",\u03C3),preKW)) {
                    $line=135;
                    $result=$opAdditY("",\u03C3);
                    if (true) break $try;
                  }
                  else {
                    $line=136;
                    if ($opMembrY(\u03C3,alphaUpper)) {
                      $line=136;
                      $result="IdU";
                      if (true) break $try;
                    }
                    else {
                      $line=137;
                      if ($opMembrY(\u03C3,alphaLower)) {
                        $line=137;
                        $result="IdL";
                        if (true) break $try;
                      }
                      else {
                        $line=138;
                        if ($opMembrY($opAdditY("",\u03C3),preOps)) {
                          $line=138;
                          $result=$opAdditY("",\u03C3);
                          if (true) break $try;
                        }
                        else {
                          $line=139;
                          $result="Err";
                          if (true) break $try;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        else {
          $line=141;
          if (((($opMembrY(\u03C3,skipChars)&&$opMembrY(q,preKW))&&!$bool($opMembrY(q,keyWords)))&&$opEqualY(((java.lang.String)q).charAt($int(0)),':'))) {
            $line=141;
            $result="Err";
            if (true) break $try;
          }
          else {
            $line=142;
            if ($opMembrY(\u03C3,skipChars)) {
              $line=142;
              $result="INIT";
              if (true) break $try;
            }
            else {
              $line=143;
              if (($opEqualY(q,"INIT")&&$opMembrY(\u03C3,$opIntvlY('0','9')))) {
                $line=143;
                $result="Num";
                if (true) break $try;
              }
              else {
                $line=144;
                if (($opEqualY(q,"INIT")&&$opMembrY($opAdditY("",\u03C3),preKW))) {
                  $line=144;
                  $result=$opAdditY("",\u03C3);
                  if (true) break $try;
                }
                else {
                  $line=145;
                  if (($opEqualY(q,"INIT")&&$opMembrY(\u03C3,alphaUpper))) {
                    $line=145;
                    $result="IdU";
                    if (true) break $try;
                  }
                  else {
                    $line=146;
                    if (($opEqualY(q,"INIT")&&$opMembrY(\u03C3,alphaLower))) {
                      $line=146;
                      $result="IdL";
                      if (true) break $try;
                    }
                    else {
                      $line=147;
                      if (($opEqualY(q,"INIT")&&$opMembrY($opAdditY("",\u03C3),preOps))) {
                        $line=147;
                        $result=$opAdditY("",\u03C3);
                        if (true) break $try;
                      }
                      else {
                        $line=148;
                        if (($opMembrY(q,preKW)&&$opMembrY($opAdditY(q,\u03C3),preKW))) {
                          $line=148;
                          $result=$opAdditY(q,\u03C3);
                          if (true) break $try;
                        }
                        else {
                          $line=149;
                          if ((($opMembrY(q,preKW)&&$opMembrY(\u03C3,alphaNum))&&$opMembrY(((java.lang.String)q).charAt($int(0)),alphaUpper))) {
                            $line=149;
                            $result="IdU";
                            if (true) break $try;
                          }
                          else {
                            $line=150;
                            if ((($opMembrY(q,preKW)&&$opMembrY(\u03C3,alphaNum))&&$opMembrY(((java.lang.String)q).charAt($int(0)),alphaLower))) {
                              $line=150;
                              $result="IdL";
                              if (true) break $try;
                            }
                            else {
                              $line=151;
                              if (($opMembrY(q,preKW)&&$opMembrY($opAdditY("",\u03C3),preOps))) {
                                $line=151;
                                $result=$opAdditY("",\u03C3);
                                if (true) break $try;
                              }
                              else {
                                $line=152;
                                if (($opEqualY(q,"Num")&&$opMembrY(\u03C3,$opIntvlY('0','9')))) {
                                  $line=152;
                                  $result="Num";
                                  if (true) break $try;
                                }
                                else {
                                  $line=153;
                                  if (($opEqualY(q,"Num")&&$opMembrY($opAdditY("",\u03C3),preOps))) {
                                    $line=153;
                                    $result=$opAdditY("",\u03C3);
                                    if (true) break $try;
                                  }
                                  else {
                                    $line=154;
                                    if (($opEqualY(q,"Num")&&$opMembrY(\u03C3,alphaNum))) {
                                      $line=154;
                                      $result="Err";
                                      if (true) break $try;
                                    }
                                    else {
                                      $line=155;
                                      if (($opMembrY(q,Ids)&&$opMembrY(\u03C3,alphaNum))) {
                                        $line=155;
                                        $result=q;
                                        if (true) break $try;
                                      }
                                      else {
                                        $line=156;
                                        if (($opMembrY(q,Ids)&&$opMembrY($opAdditY("",\u03C3),preOps))) {
                                          $line=156;
                                          $result=$opAdditY("",\u03C3);
                                          if (true) break $try;
                                        }
                                        else {
                                          $line=157;
                                          $result="Err";
                                          if (true) break $try;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      $line=159;
      $rethrow(new RuntimeException("The function \"\u03B4(state:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object g(Object q) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=165;
      $result="";
      if (true) break $try;
      $line=166;
      $rethrow(new RuntimeException("The function \"g(q:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,"g",$line);
    }
    return $result;
  }
  public static Object h(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=169;
      String s=null;
      s=$defaultValue(String.class);
      $line=170;
      s=$cast(String.class,$fix((($bool($opEqualY(\u03C3,'\n')))?("\\n"):($opAdditY("",\u03C3)))));
      $line=172;
      if ($opMembrY(q,preOps)) {
        $line=173;
        if (($opMembrY(\u03C3,skipChars)&&$opMembrY(q,allSymbols))) {
          $line=174;
          ((gold.structures.list.GArrayList)images).add(currentString);
          $line=175;
          currentString=$cast(String.class,$fix(""));
          $line=176;
          $result=Lexer202220.translationGet(q);
          if (true) break $try;
        }
        else {
          $line=177;
          if ($opMembrY($opAdditY(q,\u03C3),preOps)) {
            $line=178;
            currentString=$cast(String.class,$fix($opAdditY(currentString,s)));
            $line=179;
            $result="";
            if (true) break $try;
          }
          else {
            $line=180;
            if (($opMembrY(\u03C3,$opUnionY(StartOps,alphaNum))&&$opMembrY(q,allSymbols))) {
              $line=181;
              ((gold.structures.list.GArrayList)images).add(currentString);
              $line=182;
              currentString=$cast(String.class,$fix($opAdditY("",s)));
              $line=183;
              $result=Lexer202220.translationGet(q);
              if (true) break $try;
            }
            else {
              $line=184;
              if ($opMembrY(\u03C3,$opUnionY($opUnionY($opUnionY(StartOps,alphaNum),skipChars),GCollections.asSet(':')))) {
                $line=185;
                currentString=$cast(String.class,$fix($opAdditY("",s)));
                $line=186;
                $result=Lexer202220.translationPreOps(q);
                if (true) break $try;
              }
              else {
                $line=188;
                currentString=$cast(String.class,$fix($opAdditY(currentString,s)));
                $line=189;
                $result="";
                if (true) break $try;
              }
            }
          }
        }
      }
      else {
        $line=193;
        if ((!$opMembrY(q,GCollections.asSet("Err"))&&$opMembrY(\u03C3,$opUnionY(skipChars,StartOps)))) {
          $line=194;
          if ($opEqualY(q,"INIT")) {
            $line=195;
            currentString=$cast(String.class,$fix((($bool($opMembrY(\u03C3,StartOps)))?(s):(""))));
            $line=196;
            $result="";
            if (true) break $try;
          }
          else {
            $line=197;
            if ($opEqualY(Lexer202220.translationGet(q),null)) {
              $line=199;
              ((gold.structures.list.GArrayList)images).add(currentString);
              $line=200;
              currentString=$cast(String.class,$fix((($bool($opMembrY(\u03C3,$opUnionY(skipChars,StartOps))))?(s):(""))));
              $line=201;
              Object f=$fix($invokeMethod("charAt",q,new Object[]{0}));
              $line=202;
              if ($opMembrY(f,alphaUpper)) {
                $line=202;
                $result=Lexer202220.translationGet("IdU");
                if (true) break $try;
              }
              else {
                $line=203;
                if ($opMembrY(f,alphaLower)) {
                  $line=204;
                  $result=Lexer202220.translationGet("IdL");
                  if (true) break $try;
                }
                else {
                  $line=205;
                  $result=null;
                  if (true) break $try;
                }
              }
            }
            else {
              $line=208;
              ((gold.structures.list.GArrayList)images).add(currentString);
              $line=209;
              currentString=$cast(String.class,$fix((($bool($opMembrY(\u03C3,$opUnionY(skipChars,StartOps))))?(s):(""))));
              $line=210;
              $result=Lexer202220.translationGet(q);
              if (true) break $try;
            }
          }
        }
        else {
          $line=213;
          currentString=$cast(String.class,$fix($opAdditY(currentString,s)));
          $line=214;
          $result="";
          if (true) break $try;
        }
      }
      $line=217;
      $rethrow(new RuntimeException("The function \"h(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,"h",$line);
    }
    return $result;
  }
  public static Object initialize() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=223;
      skipChars=$cast(ISet.class,$fix(GCollections.asSet(' ','\t','\n')));
      $line=224;
      alphaUpper=$cast(ISet.class,$fix($opIntvlY('A','Z')));
      $line=225;
      alphaLower=$cast(ISet.class,$fix($opIntvlY('a','z')));
      $line=226;
      digits=$cast(ISet.class,$fix($opIntvlY('0','9')));
      $line=227;
      alphaNum=$cast(ISet.class,$fix($opUnionY($opUnionY($opUnionY(alphaUpper,alphaLower),digits),GCollections.asSet('-'))));
      $line=229;
      keyWords=$cast(ISet.class,$fix(GCollections.asSet("PROG","GORP","VAR","PROC","CORP","walk","jump","jumpTo","veer","left","right","around","look","north","south","east","west","drop","grab","get","free","pop","front","back","if","else","fi","while","do","od","repeatTimes","per","isfacing","isValid","canWalk","not")));
      $line=246;
      allSymbols=$cast(ISet.class,$fix(GCollections.asSet(";","(",")",",","{","}",":=")));
      $line=304;
      ((gold.structures.map.GHashTableMap)translation).put("PROG",'D');
      $line=305;
      ((gold.structures.map.GHashTableMap)translation).put("GORP",'G');
      $line=306;
      ((gold.structures.map.GHashTableMap)translation).put("VAR",'A');
      $line=307;
      ((gold.structures.map.GHashTableMap)translation).put("PROC",'P');
      $line=308;
      ((gold.structures.map.GHashTableMap)translation).put("CORP",'C');
      $line=311;
      ((gold.structures.map.GHashTableMap)translation).put("walk",'k');
      $line=312;
      ((gold.structures.map.GHashTableMap)translation).put("jump",'j');
      $line=313;
      ((gold.structures.map.GHashTableMap)translation).put("jumpTo",'t');
      $line=314;
      ((gold.structures.map.GHashTableMap)translation).put("veer",'q');
      $line=315;
      ((gold.structures.map.GHashTableMap)translation).put("look",'l');
      $line=316;
      ((gold.structures.map.GHashTableMap)translation).put("drop",'d');
      $line=317;
      ((gold.structures.map.GHashTableMap)translation).put("grab",'a');
      $line=318;
      ((gold.structures.map.GHashTableMap)translation).put("get",'g');
      $line=319;
      ((gold.structures.map.GHashTableMap)translation).put("free",'e');
      $line=320;
      ((gold.structures.map.GHashTableMap)translation).put("pop",'o');
      $line=323;
      ((gold.structures.map.GHashTableMap)translation).put("left",'L');
      $line=324;
      ((gold.structures.map.GHashTableMap)translation).put("right",'R');
      $line=325;
      ((gold.structures.map.GHashTableMap)translation).put("around",'O');
      $line=326;
      ((gold.structures.map.GHashTableMap)translation).put("north",'N');
      $line=327;
      ((gold.structures.map.GHashTableMap)translation).put("south",'S');
      $line=328;
      ((gold.structures.map.GHashTableMap)translation).put("east",'E');
      $line=329;
      ((gold.structures.map.GHashTableMap)translation).put("west",'W');
      $line=330;
      ((gold.structures.map.GHashTableMap)translation).put("front",'F');
      $line=331;
      ((gold.structures.map.GHashTableMap)translation).put("back",'B');
      $line=334;
      ((gold.structures.map.GHashTableMap)translation).put("if",'i');
      $line=335;
      ((gold.structures.map.GHashTableMap)translation).put("else",'s');
      $line=336;
      ((gold.structures.map.GHashTableMap)translation).put("fi",'f');
      $line=337;
      ((gold.structures.map.GHashTableMap)translation).put("while",'w');
      $line=338;
      ((gold.structures.map.GHashTableMap)translation).put("do",'x');
      $line=339;
      ((gold.structures.map.GHashTableMap)translation).put("od",'y');
      $line=340;
      ((gold.structures.map.GHashTableMap)translation).put("repeatTimes",'r');
      $line=341;
      ((gold.structures.map.GHashTableMap)translation).put("per",'p');
      $line=344;
      ((gold.structures.map.GHashTableMap)translation).put("isfacing",'b');
      $line=345;
      ((gold.structures.map.GHashTableMap)translation).put("isValid",'h');
      $line=346;
      ((gold.structures.map.GHashTableMap)translation).put("pick",'m');
      $line=347;
      ((gold.structures.map.GHashTableMap)translation).put("canWalk",'c');
      $line=348;
      ((gold.structures.map.GHashTableMap)translation).put("not",'n');
      $line=351;
      ((gold.structures.map.GHashTableMap)translation).put(":=",'=');
      $line=354;
      ((gold.structures.map.GHashTableMap)translation).put("IdL",'v');
      $line=355;
      ((gold.structures.map.GHashTableMap)translation).put("IdU",'V');
      $line=358;
      ((gold.structures.map.GHashTableMap)translation).put("Num",'#');
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer202220.class,"initialize",$line);
    }
    return $result;
  }
}
